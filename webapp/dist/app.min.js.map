{"version":3,"sources":["app.jsx","toMarkdown.js"],"names":["getChannelName","channelID","channelName","String","fromCharCode","mod","div","floor","aggregateSignature","result","signature","contentID","args","toString","undefined","funds","sequence","unshift","newCred","Post","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","title","body","publisher","timestamp","cred","rank","signed","signing","error","signPost","bind","onCredChange","_this2","credsign","id","fromBlock","toBlock","get","post","Store","content","credrank","getCredRanksByContents","address","credRanks","setState","attributes","document","accountID","window","accountSignatures","account","getElementById","innerHTML","marked","e","target","value","_this3","credSigned","CRED","times","sign","estimateGas","from","gasEstimate","console","log","gas","watcher","Sign","watch","stopWatching","parseInt","React","createElement","style","backgroundColor","maxWidth","margin","padding","color","paddingBottom","Date","toLocaleString","href","borderBottom","substr","channel","className","display","textAlign","type","name","placeholder","onChange","fontSize","border","outline","paddingRight","onClick","Component","Create","_this4","view","preventHeaderUnbold","action","getAttribute","parentNode","active","getElementsByClassName","i","length","test","stopPropagation","preventDefault","preventFormatHotkey","ctrlKey","metaKey","keyCode","editPost","previewPost","setChannel","submitPost","MediumEditor","buttonLabels","keyboardCommands","toolbar","buttons","text","hideOnClick","addEventListener","removeEventListener","toMarkdown","_this5","errors","getChannelByName","push","join","nonce","web3","sha3","toBigNumber","constructor","random","location","hash","_this6","width","contentEditable","height","opacity","position","zIndex","top","left","marginLeft","cursor","RankedChannels","_this7","loaded","listItems","count","_this8","getNumChannels","numRanks","getChannelsByRanks","tuple","ids","map","ranks","listItem","key","paddingLeft","fontStyle","ChannelPosts","_this9","toggle","filter","getPosts","getTopPosts","getNewPosts","onFilterChange","nextProps","menu","_this10","getNumContents","getContentsByRanks","idToIndex","posts","forEach","index","_this11","sequenceNums","Array","_","sequenceNum","reverse","_this12","funding","onMouseLeave","Account","_this13","getAddress","input","_this14","signedContents","signatures","fundedIDs","_this15","App","_this16","levelOne","levelTwo","levelThree","levelFour","editChannel","route","_this17","eth","getAccounts","accounts","_defineProperty","warn","path","split","_this18","fontWeight","borderTop","borderRight","borderLeft","placeholderTextColor","bottom","textTransform","node","markdownEscape","replace","repeat","str","childsToMarkdown","tree","mode","res","l","childNodes","nodeToMarkdown","nl","nodeType","nodeValue","tagName","toLowerCase"],"mappings":"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","file":"app.min.js","sourcesContent":["function getChannelName(channelID) {\n  var channelName = '';\n  while (channelID != 0) {\n    channelName = String.fromCharCode(channelID.mod(256)) + channelName;\n    channelID = channelID.div(256).floor();\n  }\n  return channelName;\n}\n\nfunction aggregateSignature(result, signature) {\n  var contentID = '0x' + signature.args.contentID.toString(16);\n  if (result.funds[contentID] === undefined) {\n    result.sequence.unshift(contentID);\n  }\n  result.funds[contentID] = signature.args.newCred.toString();\n}\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newCred: '',\n      title: '',\n      body: '',\n      publisher: '0x0',\n      timestamp: '0',\n      cred: 0,\n      rank: 0,\n      funds: 0,\n      signed: false,\n      signing: false,\n      error: ''\n    };\n    this.signPost = this.signPost.bind(this);\n    this.onCredChange = this.onCredChange.bind(this);\n  }\n\n  componentDidMount() {\n    credsign.Post({id: this.props.id}, {fromBlock: 0, toBlock: 'latest'}).get((error, post) => {\n      credsign.Store({id: this.props.id}, {fromBlock: 0, toBlock: 'latest'}).get((error, content) => {\n        credrank.getCredRanksByContents(credsign.address, [this.props.id], (error, credRanks) => {\n          this.setState({\n            title: content[0].args.attributes,\n            body: content[0].args.document,\n            publisher: post[0].args.accountID,\n            timestamp: post[0].args.timestamp,\n            cred: credRanks[0][0].toString(10),\n            rank: credRanks[1][0].toString(10),\n            funds: window.accountSignatures[this.props.account].funds[this.props.id] || 0\n          });\n        });\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    document.getElementById('post-'+this.props.id).innerHTML = marked(this.state.body);\n  }\n\n  onCredChange(e) {\n    this.setState({\n      newCred: e.target.value\n    });\n  }\n\n  signPost() {\n    this.setState({\n      signing: true\n    });\n    var newCred = this.state.newCred;\n    var credSigned = 0; // FIXME\n    var value = credsign.CRED().times(newCred > credSigned ? (newCred - credSigned) : 0);\n    credsign.sign.estimateGas(this.props.id, newCred, credrank.address, {from: this.props.account, value: value}, (error, gasEstimate) => {\n      console.log(gasEstimate);\n      gasEstimate += 100000;\n      credsign.sign(this.props.id, newCred, credrank.address, {from: this.props.account, value: value, gas: gasEstimate}, (error, result) => {\n        if (error) {\n          this.setState({\n            error: error.toString()\n          });\n        }\n        else {\n          var watcher = credsign.Sign({accountID: this.props.account, contentID: this.props.id}, {fromBlock: 'latest'});\n          watcher.watch((error, signature) => {\n            watcher.stopWatching();\n            if (error) {\n              this.setState({\n                error: error.toString()\n              });\n            }\n            else {\n              credrank.getCredRanksByContents(credsign.address, [this.props.id], (error, credRanks) => {\n                this.setState({\n                  signing: false,\n                  cred: credRanks[0][0].toString(10),\n                  rank: credRanks[1][0].toString(10),\n                  newCred: '',\n                  signed: true,\n                  funds: parseInt(signature.args.newCred.toString())\n                });\n              });\n            }\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{backgroundColor: '#FFF'}}>\n          <div style={{maxWidth: '600px', margin: '0 auto'}}>\n            <div style={{padding: '1.5em 1em'}}>\n              <div style={{color: 'gray', paddingBottom: '1em'}}>\n                <span>{`Posted ${new Date(this.state.timestamp* 1000).toLocaleString()} by `}</span>\n                <a href={`#/account/${this.state.publisher}`} style={{\n                  borderBottom: '2px solid gray',\n                  padding: '.5em 0',\n                  color: 'gray'\n                }}>{`${this.state.publisher.substr(0,5)}...${this.state.publisher.substr(-3)}`}</a>\n                <span>{` in `}</span>\n                <a href={`#/channel/${this.props.channel}`} style={{\n                  color:'gray',\n                  borderBottom: '2px solid gray',\n                  paddingBottom: '.5em'}}>{\n                  `#${this.props.channel}`\n                }</a>\n              </div>\n              <h1>{this.state.title}</h1>\n              <div id={'post-'+this.props.id}></div>\n            </div>\n          </div>\n        </div>\n        <div style={{maxWidth: '600px', margin: '0 auto'}}>\n          <div className=\"flex\" style={{padding: '1.5em 1em'}}>\n            <div className=\"flex-grow\" style={{display: 'block', textAlign: 'left'}}>\n              <div>\n                <span>{`Rank ${this.state.rank} with ${this.state.cred}¢`}</span>\n              </div>\n            </div>\n            <div className=\"flex-grow\" style={{\n              textAlign: 'right',\n              display: (this.props.account == '') ? 'none' : 'block'\n            }}>\n              <div style={{display: !this.state.signing ? 'block' : 'none'}}>\n                <input type=\"text\" name=\"cred\" placeholder={this.state.funds} value={this.state.newCred} onChange={this.onCredChange} style={{textAlign: 'right', fontSize: '1em', border: '0', backgroundColor: 'transparent', outline: 'none'}} />\n                <span style={{paddingRight: '.5em'}}>¢</span>\n                <a onClick={this.signPost} style={{\n                  color: 'black',\n                  display: 'inline-block',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }}>Sign</a>\n              </div>\n              <div style={{display: this.state.signing ? 'block' : 'none'}}>\n                <span>Signing, please wait...</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Create extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      view: 'edit',\n      channel: '',\n      error: ''\n    };\n\n    this.preventHeaderUnbold = (e) => {\n      var action = e.target.getAttribute('data-action') || e.target.parentNode.getAttribute('data-action');\n      if (action == 'bold') {\n        var active = document.getElementsByClassName('medium-editor-button-active');\n        for (var i = 0; i < active.length; i++) {\n          if (/h+/.test(active[i].getAttribute('data-action', ''))) {\n            e.stopPropagation();\n            e.preventDefault();\n            return;\n          }\n        }\n      }\n    };\n\n    this.preventFormatHotkey = (e) => {\n      if (e.ctrlKey || e.metaKey) {\n        switch(e.keyCode){\n          case 66: //ctrl+B or ctrl+b\n          case 98:\n          case 73: //ctrl+I or ctrl+i\n          case 105:\n          case 85: //ctrl+U or ctrl+u\n          case 117:\n            e.stopPropagation();\n            e.preventDefault();\n            return false;\n        }\n      }\n    };\n\n    this.editPost = this.editPost.bind(this);\n    this.previewPost = this.previewPost.bind(this);\n    this.setChannel = this.setChannel.bind(this);\n    this.submitPost = this.submitPost.bind(this);\n  }\n\n  componentDidMount() {\n    var editor = new MediumEditor('#new-post-body', {\n      buttonLabels: 'fontawesome',\n      keyboardCommands: false,\n      toolbar: {\n        buttons: ['bold', 'italic', 'h2', 'h3', 'image', 'anchor', 'pre', 'quote'],\n      },\n      placeholder: {\n        text: 'body',\n        hideOnClick: true\n      }\n    });\n    // Prevent the user from 'unbolding' text marked with h1, h2, hX...\n    document.addEventListener('click', this.preventHeaderUnbold, true);\n\n    // Prevent Bold/Italics/Underline via shortcuts\n    document.addEventListener('keydown', this.preventFormatHotkey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.preventHeaderUnbold);\n    document.removeEventListener('keydown', this.preventFormatHotkey);\n  }\n\n  editPost() {\n    this.setState({\n      view: 'edit',\n      error: ''\n    });\n  }\n\n  previewPost() {\n    this.setState({\n      view: 'preview',\n      error: ''\n    });\n    document.getElementById('new-post-title-preview').innerHTML = document.getElementById('new-post-title').value;\n    document.getElementById('new-post-body-preview').innerHTML = marked(toMarkdown(document.getElementById('new-post-body')));\n  }\n\n  setChannel(e) {\n    this.setState({\n      channel: e.target.innerHTML\n    });\n  }\n\n  submitPost() {\n\n    var errors = [];\n    var title = document.getElementById('new-post-title').value;\n    var body = toMarkdown(document.getElementById('new-post-body'));\n\n    if (credsign.getChannelByName(this.props.channel) == 0) {\n      errors.push('Channel must be between 3 and 30 characters and consist of only letters numbers and underscores');\n    }\n    if (title.length < 10 || title > 100) {\n      errors.push('Title must be between 10 and 100 characters');\n    }\n    this.setState({\n      error: errors.join('. '),\n      view: 'submit'\n    });\n\n    if (errors.length == 0) {\n      var nonce = web3.sha3(web3.toBigNumber(0).constructor.random().toString());\n      this.setState({\n        nonce: nonce\n      })\n      credsign.post.estimateGas(this.props.channel, title, body, nonce, 0, credrank.address, {from: this.props.account, value: 0}, (error, gasEstimate) => {\n        console.log(gasEstimate);\n        gasEstimate += 100000;\n        credsign.post(this.props.channel, title, body, nonce, 0, credrank.address, {from: this.props.account, value: 0, gas: gasEstimate}, (error) => {\n          if (error) {\n            this.setState({\n              error: error.toString()\n            });\n          }\n          else {\n            var watcher = credsign.Store({accountID: this.props.account, nonce: this.state.nonce}, {fromBlock: 'latest'});\n            watcher.watch((error, post) => {\n              watcher.stopWatching();\n              if (error) {\n                this.setState({\n                  error: error.toString()\n                });\n              }\n              else {\n                window.location.hash = `#/channel/${this.props.channel}/post/0x${post.args.contentID.toString(16)}`;\n              }\n            });\n          }\n        });\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div style={{width: '100%', margin: '0 auto'}}>\n        <div style={{width: '100%', backgroundColor: '#FFF'}}>\n          <div style={{maxWidth: '600px', margin: '0 auto'}}>\n            <div style={{padding: '2em 1em'}}>\n              <div style={{display: this.state.view == 'edit' ? 'block' : 'none'}}>\n                <textarea id=\"new-post-title\" type=\"text\" placeholder=\"title\"></textarea>\n                <div id=\"new-post-body\" contentEditable=\"true\"></div>\n              </div>\n              <div style={{display: this.state.view != 'edit' ? 'block' : 'none'}}>\n                <h1 id=\"new-post-title-preview\"></h1>\n                <div id=\"new-post-body-preview\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div style={{width: '100%'}}>\n          <div style={{maxWidth: '600px', margin: '0 auto'}}>\n            <div className=\"flex\" style={{padding: '1.5em 1em'}}>\n              <div className=\"flex-grow\" style={{textAlign: 'left'}}>\n                <a style={{\n                  color: 'black',\n                  display: this.state.view == 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} href={'#/channel/'+this.props.channel}>Cancel</a>\n                <a style={{\n                  display: this.state.view != 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} onClick={this.editPost}>Edit</a>\n              </div>\n              <div className=\"flex-grow\" style={{textAlign: 'right'}}>\n                <a style={{\n                  display: this.state.view == 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} onClick={this.previewPost}>Preview</a>\n                <a style={{\n                  display: this.state.view != 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} onClick={this.submitPost}>Publish</a>\n              </div>\n              <div className='backdrop' style={{\n                width: '100%',\n                height: '100%',\n                opacity: 0.5,\n                backgroundColor: 'black',\n                position: 'fixed',\n                zIndex: 1,\n                display: this.state.view == 'submit' ? 'block' : 'none',\n                top: '0',\n                left: '0'\n              }}>{' '}</div>\n              <div style={{\n                display: this.state.view == 'submit' ? 'block' : 'none',\n                left: '50%',\n                top: '30%',\n                marginLeft: '-300px',\n                position: 'fixed',\n                zIndex: 2,\n                backgroundColor: '#FCFCFC',\n                border: '1px solid #DDD',\n                width: '600px'\n              }}>\n                <div style={{padding: '1em', display: this.state.error.length > 0 ? 'block' : 'none'}}>\n                  <h1>Unable to publish</h1>\n                  <div style={{padding: '1em 0'}}>{this.state.error}</div>\n                  <span onClick={() => this.setState({view: 'edit', error: ''})} style={{\n                    borderBottom: '2px solid black',\n                    padding: '.5em 0',\n                    display: 'inline-block',\n                    cursor: 'pointer'\n                  }}>Close</span>\n                </div>\n                <div style={{padding: '1em', display: this.state.error.length == 0 ? 'block' : 'none'}}>\n                  <h1>Publishing...</h1>\n                  <div style={{padding: '1em 0'}}>{\n                    'Your post is being published. This page will redirect to your post once published. '+\n                    'If you are not redirected after several minutes, try closing this message and publishing again.'\n                  }</div>\n                  <span onClick={() => this.setState({view: 'publish', error: ''})} style={{\n                    borderBottom: '2px solid black',\n                    padding: '.5em 0',\n                    display: 'inline-block',\n                    cursor: 'pointer'\n                  }}>Close</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass RankedChannels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      listItems: [],\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    credrank.getNumChannels(credsign.address, (error, numRanks) => {\n      if (numRanks == 0) {\n        this.setState({\n          loaded: true,\n          listItems: [],\n          count: 0\n        });\n        return;\n      }\n      credrank.getChannelsByRanks(credsign.address, 1, numRanks, (error, tuple) => {\n        var ids = tuple[0];\n        var cred = tuple[1].map((cred) => parseInt(cred.toString()));\n        var ranks = tuple[2].map((rank) => parseInt(rank.toString()));\n\n        var listItems = [];\n        for (var i = 0; i < ids.length; i++) {\n          listItems.push({\n            id: '0x' + ids[i].toString(16),\n            channelName: getChannelName(ids[i]),\n            rank: ranks[i].toString(),\n            cred: cred[i].toString()\n          });\n        }\n        this.setState({\n          loaded: true,\n          listItems: listItems,\n          count: numRanks\n        });\n      });\n    });\n  }\n\n  render() {\n    var listItems = this.state.listItems.map((listItem) => {\n      return (\n        <li key={'li-'+listItem.id} value={listItem.rank}>\n          <a href={`#/channel/${listItem.channelName}`}>\n            <div>{'#' + listItem.channelName}</div>\n            <span>{'Rank '+listItem.rank + ' with '+listItem.cred + '¢ signed'}</span>\n          </a>\n        </li>\n      );\n    });\n    return (\n      <div className='view-align'>\n        <div>\n          <span>{'Top channels'}</span>\n          <span>{' (' + this.state.count + ')'}</span>\n          </div>\n        <ol>{listItems}</ol>\n        <span style={{paddingLeft: '1em', display: listItems.length == 0 ? 'block' : 'none', fontStyle: 'italic'}}>Nothing to see here</span>\n      </div>\n    );\n  }\n}\n\nclass ChannelPosts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false,\n      channelID: -1,\n      listItems: [],\n      filter: \"Top\",\n      count: 0\n    };\n    this.getPosts = this.getPosts.bind(this);\n    this.getTopPosts = this.getTopPosts.bind(this);\n    this.getNewPosts = this.getNewPosts.bind(this);\n    this.onFilterChange = this.onFilterChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPosts(this.state.filter, this.props.channel);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.getPosts(this.state.filter, nextProps.channel);\n  }\n\n  onFilterChange(e) {\n    this.getPosts(e.target.innerHTML, this.props.channel);\n  }\n\n  getPosts(filter, channel) {\n    this.setState({\n      filter: filter,\n      menu: false\n    });\n    if (filter == \"Top\") {\n      this.getTopPosts(channel);\n    }\n    else if (filter == \"New\") {\n      this.getNewPosts(channel);\n    }\n  }\n\n  getTopPosts(channel) {\n    credsign.getChannelByName(channel, (error, channelID) => {\n      credrank.getNumContents(credsign.address, channelID, (error, numRanks) => {\n        if (numRanks == 0 || channelID == 0) {\n          this.setState({\n            loaded: true,\n            listItems: [],\n            channelID: channelID,\n            count: 0\n          });\n          return;\n        }\n        else {\n          this.setState({\n            channelID: channelID\n          });\n        }\n        credrank.getContentsByRanks(credsign.address, channelID, 1, numRanks, (error, tuple) => {\n          var ids = tuple[0].map((id) => '0x' + id.toString(16));\n          var cred = tuple[1].map((cred) => parseInt(cred.toString()));\n          var ranks = tuple[2].map((rank) => parseInt(rank.toString()));\n          var listItems = [];\n          var idToIndex = {};\n          for (var i = 0; i < ids.length; i++) {\n            idToIndex[ids[i]] = i;\n            listItems.push({\n              id: ids[i],\n              rank: ranks[i].toString(),\n              cred: cred[i].toString()\n            });\n          }\n          credsign.Post({contentID: ids}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n            posts.forEach((post) => {\n              var index = idToIndex['0x' + post.args.contentID.toString(16)];\n              listItems[index].title = post.args.attributes;\n              listItems[index].timestamp = post.args.timestamp;\n            });\n            this.setState({\n              toggle: !this.state.toggle,\n              listItems: listItems,\n              count: numRanks\n            });\n          });\n        });\n      });\n    });\n  }\n\n  getNewPosts(channel) {\n    credsign.getChannelByName(channel, (error, channelID) => {\n      credsign.getNumContents(channelID, (error, numRanks) => {\n        if (numRanks == 0) {\n          this.setState({\n            loaded: true,\n            listItems: [],\n            count: 0\n          });\n          return;\n        }\n        else {\n          this.setState({\n            channelID: channelID\n          });\n        }\n        var sequenceNums = [Array.from(Array(numRanks))].map((_, i) => i + 1);\n        credsign.Post({channelID: channelID, sequenceNum: sequenceNums}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n          var ids = [];\n          var listItems = [];\n          for (var i = 0; i < posts.length; i++) {\n            ids.push(posts[i].args.contentID);\n            listItems.push({\n              id: '0x' + ids[i].toString(16),\n              title: posts[i].args.title,\n              timestamp: posts[i].args.timestamp\n            });\n          };\n          credrank.getCredRanksByContents(credsign.address, ids, (error, credRanks) => {\n            for (var i = 0; i < posts.length; i++) {\n              listItems[i].cred = credRanks[0][i].toString();\n              listItems[i].rank = credRanks[1][i].toString();\n            }\n            this.setState({\n              toggle: !this.state.toggle,\n              listItems: listItems.reverse(),\n              count: numRanks\n            });\n          });\n        });\n      })\n    });\n  }\n\n  render() {\n    var listItems = this.state.listItems.map((listItem) => {\n      var signature = ''\n      if (listItem.signed) {\n        signature = '- Signed';\n        if (listItem.funding > 0) {\n          signature += ` with ${listItem.funding}¢`;\n        }\n      }\n      return (\n        <li key={'li-'+listItem.id} value={listItem.rank}>\n          <a href={`#/channel/${this.props.channel}/post/${listItem.id}`}>\n            <div>{listItem.title}</div>\n            <span>{`Rank ${listItem.rank} with ${listItem.cred}¢ ${signature}`}</span>\n          </a>\n        </li>\n      );\n    });\n    return (\n      <div className='view-align'>\n        <div style={{position: 'relative', display: this.state.channelID > 0 ? 'block' : 'none'}}>\n          <span onClick={() => this.setState({menu: !this.state.menu})} style={{cursor: 'pointer'}}>{`${this.state.filter} ▾`}</span>\n          <ul onMouseLeave={() => this.setState({menu: false})} style={{position: 'absolute', top: '1.5em', left: '0', display: this.state.menu ? 'block' : 'none'}}>\n            <li onClick={this.onFilterChange}>Top</li>\n            <li onClick={this.onFilterChange}>New</li>\n          </ul>\n          <span>{` posts in #${this.props.channel}`}</span>\n          <span>{' (' + this.state.count + ')'}</span>\n        </div>\n        <div style={{display: this.state.channelID == 0 ? 'block' : 'none'}}>Invalid channel</div>\n        <ol>{listItems}</ol>\n        <span style={{paddingLeft: '1em', display: listItems.length == 0 ? 'block' : 'none', fontStyle: 'italic'}}>{\n          this.state.channelID != 0\n            ? `Nothing to see here`\n            : `Channels must be between 3 and 30 characters consisting of letters, numbers, and underscores.`\n        }</span>\n      </div>\n    );\n  }\n}\n\nclass Account extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: this.props.filter || 'Posted',\n      toggle: false,\n      listItems: [],\n      count: 0\n    };\n\n    this.getPosts = this.getPosts.bind(this);\n    this.getAddress = this.getAddress.bind(this);\n    this.onFilterChange = this.onFilterChange.bind(this);\n  }\n\n  getAddress(input) {\n    if (parseInt(input) > 0)\n      return input;\n    else\n      return '-1';\n  }\n\n  componentDidMount() {\n    var account = this.getAddress(this.props.account);\n    this.getPosts(this.state.filter, account);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    var account = this.getAddress(nextProps.account);\n    if (account != this.props.account) {\n      this.getPosts(this.state.filter, account);\n    }\n  }\n\n  getPosts(filter, account) {\n    this.setState({\n      menu: false,\n      filter: filter\n    });\n    var listItems = [];\n    var signedContents = {\n      sequence: [],\n      funds: {}\n    };\n    if (filter == 'Posted') {\n      credsign.Post({accountID: account}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n        var ids = [];\n        posts.forEach((post) => {\n          ids.push(post.args.contentID);\n          listItems.push({\n            id: '0x' + post.args.contentID.toString(16),\n            title: post.args.attributes,\n            channelName: getChannelName(post.args.channelID),\n            timestamp: post.args.timestamp\n          });\n        });\n        credsign.Sign({accountID: account}, {fromBlock: 0, toBlock: 'latest'}).get((error, signatures) => {\n          signatures.forEach((signature) => {\n            aggregateSignature(signedContents, signature);\n          });\n          credrank.getCredRanksByContents(credsign.address, ids, (error, credRanks) => {\n            listItems.forEach((listItem, i) => {\n              listItem.cred = credRanks[0][i];\n              listItem.rank = credRanks[1][i];\n              listItem.signed = signedContents.funds[listItem.id] !== undefined;\n              listItem.funds = signedContents.funds[listItem.id] || 0;\n            })\n            this.setState({\n              toggle: !this.state.toggle,\n              listItems: listItems\n            });\n          });\n        });\n      });\n    }\n    else if (filter == 'Funded') {\n      credsign.Sign({accountID: account}, {fromBlock: 0, toBlock: 'latest'}).get((error, signatures) => {\n        signatures.forEach((signature) => {\n          aggregateSignature(signedContents, signature);\n        });\n        var fundedIDs = signedContents.sequence.filter((contentID) => signedContents.funds[contentID] > 0);\n        credsign.Post({contentID: fundedIDs}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n          credrank.getCredRanksByContents(credsign.address, fundedIDs, (error, credRanks) => {\n            fundedIDs.forEach((contentID, i) => {\n              listItems.push({\n                id: contentID,\n                title: posts[i].args.attributes,\n                channelName: getChannelName(posts[i].args.channelID),\n                timestamp: posts[i].args.timestamp,\n                cred: credRanks[0][i],\n                rank: credRanks[1][i],\n                signed: true,\n                funds: signedContents.funds[contentID]\n              });\n            });\n            this.setState({\n              toggle: !this.state.toggle,\n              listItems: listItems\n            });\n          });\n        });\n      });\n    }\n    else if (filter == 'Signed') {\n      credsign.Sign({accountID: account}, {fromBlock: 0, toBlock: 'latest'}).get((error, signatures) => {\n        signatures.forEach((signature) => {\n          aggregateSignature(signedContents, signature);\n        });\n        credsign.Post({contentID: signedContents.sequence}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n          credrank.getCredRanksByContents(credsign.address, signedContents.sequence, (error, credRanks) => {\n            signedContents.sequence.forEach((contentID, i) => {\n              listItems.push({\n                id: contentID,\n                title: posts[i].args.attributes,\n                channelName: getChannelName(posts[i].args.channelID),\n                timestamp: posts[i].args.timestamp,\n                cred: credRanks[0][i],\n                rank: credRanks[1][i],\n                signed: true,\n                funds: signedContents.funds[contentID]\n              });\n            });\n            this.setState({\n              toggle: !this.state.toggle,\n              listItems: listItems\n            });\n          });\n        });\n      });\n    }\n  }\n\n  onFilterChange(e) {\n    var filter = e.target.innerHTML;\n    var account = this.getAddress(this.props.account);\n    this.getPosts(filter, account);\n  }\n\n  render() {\n    var listItems = this.state.listItems.map((listItem) => {\n      var signature = ''\n      if (listItem.signed) {\n        signature = '- Signed';\n        if (listItem.funds > 0) {\n          signature += ` with ${listItem.funds}¢`;\n        }\n      }\n      return (\n        <li key={'li-'+listItem.id} value={listItem.rank}>\n          <a href={`#/channel/${listItem.channelName}/post/${listItem.id}`}>\n            <div>{listItem.title}</div>\n            <span>{`Rank ${listItem.rank} in #${listItem.channelName} with ${listItem.cred}¢ ${signature}`}</span>\n          </a>\n        </li>\n      );\n    });\n    return (\n      <div className='view-align'>\n        <div style={{position: 'relative'}}>\n          <span onClick={() => this.setState({menu: !this.state.menu})} style={{cursor: 'pointer'}}>{`${this.state.filter} ▾`}</span>\n          <ul onMouseLeave={() => this.setState({menu: false})} onClick={this.onFilterChange} style={{position: 'absolute', top: '1.5em', left: '0', display: this.state.menu ? 'block' : 'none'}}>\n            <li>Posted</li>\n            <li>Funded</li>\n            <li>Signed</li>\n          </ul>\n          <span>{` by account (${listItems.length})`}</span>\n        </div>\n        <ol>{listItems}</ol>\n        <span style={{paddingLeft: '1em', display: listItems.length == 0 ? 'block' : 'none', fontStyle: 'italic'}}>Nothing to see here</span>\n      </div>\n    );\n  }\n}\n\n// Manage navigation\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      levelOne: '',\n      levelTwo: '',\n      levelThree: '',\n      levelFour: '',\n      account: '',\n      editChannel: true,\n      contentID: null\n    };\n\n\n    this.route = this.route.bind(this);\n    this.setChannel = this.setChannel.bind(this);\n\n    window.addEventListener('hashchange', () => this.route(window.location.hash));\n  }\n\n  componentDidMount() {\n    this.route(window.location.hash);\n    web3.eth.getAccounts((error, accounts) => {\n      if (accounts.length > 0) {\n        var address = accounts[0];\n        window.accountSignatures = {\n          [address]: {\n            sequence: [],\n            funds: {}\n          }\n        };\n        var watcher = credsign.Sign({accountID: address}, {fromBlock: 0, toBlock: 'latest'});\n        watcher.get((error, signatures) => {\n          watcher.watch((error, signature) => {\n            aggregateSignature(accountSignatures[address], signature);\n          });\n          signatures.forEach((signature) => {\n            aggregateSignature(accountSignatures[address], signature);\n          });\n        });\n        this.setState({\n          account: address\n        });\n      }\n      else {\n        this.setState({\n          warn: true\n        });\n      }\n    });\n  }\n\n  setChannel(e) {\n    window.location.hash = \"#/\"+this.state.levelOne+\"/\" + e.target.value;\n    this.route(window.location.hash);\n  }\n\n  componentDidUpdate() {\n    document.getElementById('channel').innerHTML = this.state.levelTwo;\n  }\n\n  route(href) {\n    var path = href.split('/');\n    path[1] = path.length > 1 ? path[1] : 'channel';\n    path[2] = path.length > 2 ? path[2] : '';\n    path[3] = path.length > 3 ? path[3] : '';\n    path[4] = path.length > 4 ? path[4] : '';\n    this.setState({\n      levelOne: path[1],\n      levelTwo: path[2],\n      levelThree: path[3],\n      levelFour: path[4],\n      editChannel: (path[1] == 'channel' && path[3] == '') || (path[1] == 'publish') || (path[1] == 'account')\n    });\n  }\n\n  render() {\n\n    var view;\n    if (this.state.levelOne == 'channel') {\n      if (this.state.levelThree == 'post') {\n        view = <Post id={this.state.levelFour} channel={this.state.levelTwo} account={this.state.account} />;\n      }\n      else if (this.state.levelTwo == '') {\n        view = <RankedChannels />;\n      }\n      else {\n        view = <ChannelPosts channel={this.state.levelTwo} account={this.state.account} />;\n      }\n    }\n    else if (this.state.levelOne == 'publish'){\n      view = <Create channel={this.state.levelTwo} account={this.state.account} />\n    }\n    else if (this.state.levelOne == 'account') {\n      view = <Account account={this.state.levelTwo} />;\n    }\n\n    return (\n      <div style={{padding: '3em 0'}}>\n        <div style={{\n          position: 'fixed',\n          width: '100%',\n          backgroundColor: '#fafafa',\n          borderBottom: '1px solid #DDD',\n          color: 'black',\n          fontSize: '1.5em',\n          top: 0,\n          fontWeight: 'bold',\n          padding: '.5em 0',\n          textAlign: 'center',\n          zIndex: 10\n        }}>\n          <div style={{\n            width: '600px',\n            margin: '0 auto'\n          }}>\n            <div className=\"flex\" style={{padding: '0 .66em'}}>\n              <a href='#/channel' className=\"flex-grow\" style={{\n                color: 'black',\n                textAlign: 'left',\n                display: 'inline-block'\n              }}>Channels</a>\n              <div className=\"flex-shrink\" style={{\n                display: 'inline-block'\n              }}>¢</div>\n              <a href={`#/account/${this.state.account}`} className=\"flex-grow\" style={{\n                color: 'black',\n                textAlign: 'right',\n                display: 'inline-block'\n              }}>Accounts</a>\n            </div>\n          </div>\n        </div>\n        <div style={{width: '600px', margin: '0 auto', padding: '1.5em 0'}}>\n          <div className=\"flex\">\n            <div className=\"flex-grow\">\n              <div className=\"flex\" style={{\n                padding: '0 1em',\n                backgroundColor: 'white',\n                borderTop: '2px solid white',\n                borderBottom: '2px solid white',\n                borderRight: '0',\n                borderLeft: '0'\n              }}>\n                <span className=\"flex-shrink\" style={{\n                  color: 'gray',\n                  padding: '.5em 0',\n                  fontWeight: 'normal'\n                }}>{this.state.levelOne == 'account' ? '@' : '#'}</span>\n                <input type=\"text\" placeholder={this.state.levelOne == \"account\" ? \"0x321...\" : \"channel\"} id=\"channel\" className=\"flex-grow\" style={{\n                  backgroundColor: 'transparent',\n                  fontSize: '1em',\n                  padding: '.5em 0',\n                  margin: 0,\n                  border: 0,\n                  outline: 0,\n                  placeholderTextColor: 'gray',\n                  color: 'black'\n                }} value={this.state.levelTwo} onChange={this.setChannel}></input>\n              </div>\n            </div>\n            <div className=\"flex-shrink\">\n              <a style={{\n                margin: '0 1em',\n                color: 'black',\n                display: (this.state.levelOne == 'publish' || this.state.account == '') ? 'none' : 'block',\n                borderBottom: '2px solid black',\n                padding: '.5em 0'\n              }} href={`#/publish/${this.state.levelOne == 'channel' ? this.state.levelTwo : ''}`}>Publish</a>\n            </div>\n          </div>\n        </div>\n        <div style={{display: this.state.warn ? 'block': 'none'}}>\n          <div className='backdrop' style={{\n            width: '100%',\n            height: '100%',\n            opacity: 0.5,\n            backgroundColor: 'black',\n            position: 'fixed',\n            zIndex: 1,\n            top: '0',\n            left: '0'\n          }}>{' '}</div>\n          <div style={{\n            left: '50%',\n            top: '30%',\n            marginLeft: '-300px',\n            zIndex: 2,\n            position: 'fixed',\n            backgroundColor: '#FCFCFC',\n            border: '1px solid #DDD',\n            width: '600px'\n          }}>\n            <div style={{padding: '1em'}}>\n              <h1>Please link an account</h1>\n              <div style={{padding: '1em 0'}}>{\n                'CredSign was unable to detect your Ethereum account. '+\n                'If you do not have an account, please install Mist or '+\n                'MetaMask and create one. You will need an account to '+\n                'publish and sign content.'\n              }</div>\n              <span onClick={() => this.setState({warn: false})} style={{\n                borderBottom: '2px solid black',\n                padding: '.5em 0',\n                display: 'inline-block',\n                cursor: 'pointer'\n              }}>Close</span>\n            </div>\n          </div>\n        </div>\n        <div>{view}</div>\n        <div style={{\n          width: '100%',\n          position: 'fixed',\n          backgroundColor: '#fafafa',\n          borderTop: '1px solid #DDD',\n          color: 'gray',\n          bottom: 0,\n          fontSize: '69%',\n          fontWeight: 'bold',\n          padding: '1em 0',\n          textTransform: 'uppercase',\n          textAlign: 'center',\n          zIndex: 10\n        }}>\n          <span>{'Message us on '}</span>\n          <a href={'https://facebook.com/CredSign'} style={{\n            padding: '.5em 0',\n            borderBottom: '2px solid gray',\n            display: 'inline-block',\n            color: 'gray'\n          }}>Facebook</a>\n          <span>{' · View source on '}</span>\n          <a href={'https://github.com/CredSign/credsign.github.io'} style={{\n            padding: '.5em 0',\n            borderBottom: '2px solid gray',\n            display: 'inline-block',\n            color: 'gray'\n          }}>Github</a>\n          <span>{' · Usage governed by '}</span>\n          <a\n            href=\"https://github.com/CredSign/credsign.github.io/blob/master/LICENSE\"\n            style={{\n              color: 'gray',\n              padding: '.5em 0',\n              display: 'inline-block',\n              borderBottom: '2px solid gray'\n            }}>terms</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nwindow.App = App;\n","// Adapted from https://gist.github.com/Youwotma/1762527\n// No license provided in original, so assume license of this repo.\n\nwindow.toMarkdown = (node) => {\n\n    var markdownEscape = (text) => {\n        return text ? text.replace(/\\s+/g, \" \").replace(/[\\\\\\-*_>#]/g, \"\\\\$&\") : '';\n    }\n\n    var repeat = (str, times) => {\n        return (new Array(times+1)).join(str);\n    }\n\n    var childsToMarkdown = (tree, mode) => {\n        var res = \"\";\n        for (var i = 0, l = tree.childNodes.length; i < l; i++) {\n            res += nodeToMarkdown(tree.childNodes[i], mode);\n        }\n        return res;\n    }\n\n    var nodeToMarkdown = (tree, mode) => {\n        var nl = \"\\n\\n\";\n        if (tree.nodeType == 3) { // Text node\n            return markdownEscape(tree.nodeValue);\n        }\n        else if (tree.nodeType == 1) {\n            if (mode == \"block\") {\n                switch (tree.tagName.toLowerCase()) {\n                    case \"br\":\n                        return nl;\n                    case \"hr\":\n                        return nl + \"---\" + nl;\n                    // Block container elements\n                    case \"p\":\n                    case \"div\":\n                    case \"section\":\n                    case \"address\":\n                    case \"center\":\n                        return nl + childsToMarkdown(tree, \"block\") + nl;\n                    case \"ul\":\n                        return nl + childsToMarkdown(tree, \"u\") + nl;\n                    case \"ol\":\n                        return nl + childsToMarkdown(tree, \"o\") + nl;\n                    case \"pre\":\n                        return nl + \"    \" + childsToMarkdown(tree, \"inline\") + nl;\n                    case \"code\":\n                        if (tree.childNodes.length == 1) {\n                            break; // use the inline format\n                        }\n                        return nl + \"    \" + childsToMarkdown(tree, \"inline\") + nl;\n                    case \"h1\":\n                    case \"h2\":\n                    case \"h3\":\n                    case \"h4\":\n                    case \"h5\":\n                    case \"h6\":\n                        return nl + repeat(\"#\", +tree.tagName[1]) + \"  \" + childsToMarkdown(tree, \"inline\") + nl;\n                    case \"blockquote\":\n                        return nl + \"> \" + childsToMarkdown(tree, \"inline\") + nl;\n                }\n            }\n            if (/^[ou]+$/.test(mode)) {\n                if (tree.tagName == \"LI\") {\n                    return \"\\n\" + repeat(\"  \", mode.length - 1) + (mode[mode.length-1]==\"o\"?\"1. \":\"- \") + childsToMarkdown(tree, mode+\"l\");\n                }\n                else{\n                    console.log(\"[toMarkdown] - invalid element at this point \" + mode.tagName);\n                    return childsToMarkdown(tree, \"inline\");\n                }\n            }\n            else if (/^[ou]+l$/.test(mode)) {\n                if (tree.tagName == \"UL\") {\n                    return childsToMarkdown(tree,mode.substr(0,mode.length-1)+\"u\");\n                }\n                else if (tree.tagName == \"OL\") {\n                    return childsToMarkdown(tree,mode.substr(0,mode.length-1)+\"o\");\n                }\n            }\n\n            // Inline tags\n            switch (tree.tagName.toLowerCase()) {\n                case \"strong\":\n                case \"b\":\n                    return \"**\" + childsToMarkdown(tree,\"inline\") + \"**\";\n                case \"em\":\n                case \"i\":\n                    return \"_\" + childsToMarkdown(tree,\"inline\") + \"_\";\n                case \"code\": // Inline version of code\n                    return \"`\" + childsToMarkdown(tree,\"inline\") + \"`\";\n                case \"a\":\n                    return \"[\" + childsToMarkdown(tree,\"inline\") + \"](\" + tree.getAttribute(\"href\") + \")\";\n                case \"img\":\n                    return nl + \"![: \" + markdownEscape(tree.getAttribute(\"alt\")) + \"](\" + tree.getAttribute(\"src\") + \")\" + nl;\n                case \"script\":\n                case \"style\":\n                case \"meta\":\n                    return \"\";\n                default:\n                    console.log(\"[toMarkdown] - undefined element \" + tree.tagName);\n                    return childsToMarkdown(tree,mode);\n            }\n        }\n    }\n\n    return nodeToMarkdown(node, \"block\").replace(/[\\n]{2,}/g,\"\\n\\n\").replace(/^[\\n]+/,\"\").replace(/[\\n]+$/,\"\");\n}\n"],"sourceRoot":"/source/"}
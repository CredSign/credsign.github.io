{"version":3,"sources":["app.jsx","toMarkdown.js"],"names":["getChannelName","channelID","channelName","String","fromCharCode","mod","div","floor","getContentTitle","attributes","title","JSON","parse","e","console","log","replace","length","aggregateSignature","result","signature","contentID","args","toString","undefined","funds","sequence","unshift","newCred","Post","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","body","publisher","timestamp","cred","rank","signed","signing","error","signPost","bind","onCredChange","_this2","web3","toBigNumber","id","credsign","fromBlock","toBlock","get","post","Store","content","credrank","getCredRanksByContents","address","credRanks","setState","document","accountID","parseInt","window","accountSignatures","account","getElementById","innerHTML","marked","target","value","_this3","credSigned","CRED","times","sign","estimateGas","from","gasEstimate","gas","watcher","Sign","watch","stopWatching","rankCaption","React","createElement","style","backgroundColor","maxWidth","margin","padding","color","paddingBottom","Date","toLocaleString","href","borderBottom","substr","channel","className","display","textAlign","type","name","placeholder","onChange","fontSize","border","outline","paddingRight","onClick","Component","Create","_this4","view","preventHeaderUnbold","action","getAttribute","parentNode","active","getElementsByClassName","i","test","stopPropagation","preventDefault","preventFormatHotkey","ctrlKey","metaKey","keyCode","editPost","previewPost","setChannel","submitPost","MediumEditor","buttonLabels","keyboardCommands","toolbar","buttons","text","hideOnClick","addEventListener","removeEventListener","toMarkdown","_this5","errors","stringify","version","doc","getChannelByName","push","join","nonce","sha3","constructor","random","location","hash","_this6","width","contentEditable","height","opacity","position","zIndex","top","left","marginLeft","cursor","RankedChannels","_this7","loaded","listItems","count","_this8","getNumChannels","numRanks","getChannelsByRanks","tuple","ids","map","ranks","listItem","key","paddingLeft","fontStyle","ChannelPosts","_this9","toggle","filter","getPosts","getTopPosts","getNewPosts","onFilterChange","nextProps","menu","_this10","getNumContents","getContentsByRanks","idToIndex","posts","forEach","index","_this11","sequenceNums","Array","_","sequenceNum","reverse","_this12","caption","onMouseLeave","Account","_this13","getAddress","input","_this14","signedContents","signatures","fundedIDs","_this15","App","_this16","levelOne","levelTwo","levelThree","levelFour","editChannel","route","_this17","eth","getAccounts","accounts","_defineProperty","warn","path","split","_this18","fontWeight","borderTop","borderRight","borderLeft","placeholderTextColor","bottom","textTransform","node","markdownEscape","repeat","str","childsToMarkdown","tree","mode","res","l","childNodes","nodeToMarkdown","nl","nodeType","nodeValue","tagName","toLowerCase"],"mappings":"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","file":"app.min.js","sourcesContent":["function getChannelName(channelID) {\n  var channelName = '';\n  while (channelID != 0) {\n    channelName = String.fromCharCode(channelID.mod(256)) + channelName;\n    channelID = channelID.div(256).floor();\n  }\n  return channelName;\n}\n\nfunction getContentTitle(attributes) {\n  var title = null;\n  try {\n    title = JSON.parse(attributes).title;\n  }\n  catch (e) {\n    console.log(`Invalid JSON: ${attributes}`);\n  }\n\n  // If the title is empty or just spaces, return empty\n  if (title.replace(/ /g, '').length == 0) {\n    title = null;\n  }\n  return title;\n}\n\nfunction aggregateSignature(result, signature) {\n  var contentID = '0x' + signature.args.contentID.toString(16);\n  if (result.funds[contentID] === undefined) {\n    result.sequence.unshift(contentID);\n  }\n  result.funds[contentID] = signature.args.newCred.toString();\n}\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newCred: '',\n      title: '',\n      body: '',\n      publisher: '0x0',\n      timestamp: '0',\n      cred: 0,\n      rank: 0,\n      funds: 0,\n      signed: false,\n      signing: false,\n      error: ''\n    };\n    this.signPost = this.signPost.bind(this);\n    this.onCredChange = this.onCredChange.bind(this);\n  }\n\n  componentDidMount() {\n    var contentID = web3.toBigNumber(this.props.id);\n    credsign.Post({contentID: contentID}, {fromBlock: 0, toBlock: 'latest'}).get((error, post) => {\n      credsign.Store({contentID: contentID}, {fromBlock: 0, toBlock: 'latest'}).get((error, content) => {\n        credrank.getCredRanksByContents(credsign.address, [this.props.id], (error, credRanks) => {\n          this.setState({\n            title: getContentTitle(content[0].args.attributes),\n            body: JSON.parse(content[0].args.document).body,\n            publisher: post[0].args.accountID,\n            timestamp: post[0].args.timestamp,\n            cred: parseInt(credRanks[0][0].toString()),\n            rank: parseInt(credRanks[1][0].toString()),\n            funds: window.accountSignatures[this.props.account].funds[this.props.id] || 0\n          });\n        });\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    document.getElementById('post-'+this.props.id).innerHTML = marked(this.state.body);\n  }\n\n  onCredChange(e) {\n    this.setState({\n      newCred: e.target.value\n    });\n  }\n\n  signPost() {\n    this.setState({\n      signing: true\n    });\n    var newCred = this.state.newCred;\n    var credSigned = 0; // FIXME\n    var value = credsign.CRED().times(newCred > credSigned ? (newCred - credSigned) : 0);\n    credsign.sign.estimateGas(this.props.id, newCred, credrank.address, {from: this.props.account, value: value}, (error, gasEstimate) => {\n      console.log(gasEstimate);\n      gasEstimate += 100000;\n      credsign.sign(this.props.id, newCred, credrank.address, {from: this.props.account, value: value, gas: gasEstimate}, (error, result) => {\n        if (error) {\n          this.setState({\n            error: error.toString()\n          });\n        }\n        else {\n          var watcher = credsign.Sign({accountID: this.props.account, contentID: this.props.id}, {fromBlock: 'latest'});\n          watcher.watch((error, signature) => {\n            watcher.stopWatching();\n            if (error) {\n              this.setState({\n                error: error.toString()\n              });\n            }\n            else {\n              credrank.getCredRanksByContents(credsign.address, [this.props.id], (error, credRanks) => {\n                this.setState({\n                  signing: false,\n                  cred: parseInt(credRanks[0][0].toString()),\n                  rank: parseInt(credRanks[1][0].toString()),\n                  newCred: '',\n                  signed: true,\n                  funds: parseInt(signature.args.newCred.toString())\n                });\n              });\n            }\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    var rankCaption = this.state.rank > 0\n      ? `Rank ${this.state.rank} with ${this.state.cred}¢`\n      : `Currently unranked`;\n    return (\n      <div>\n        <div style={{backgroundColor: '#FFF'}}>\n          <div style={{maxWidth: '600px', margin: '0 auto'}}>\n            <div style={{padding: '1.5em 1em'}}>\n              <div style={{color: 'gray', paddingBottom: '1em'}}>\n                <span>{`Posted ${new Date(this.state.timestamp* 1000).toLocaleString()} by `}</span>\n                <a href={`#/account/${this.state.publisher}`} style={{\n                  borderBottom: '2px solid gray',\n                  padding: '.5em 0',\n                  color: 'gray'\n                }}>{`${this.state.publisher.substr(0,5)}...${this.state.publisher.substr(-3)}`}</a>\n                <span>{` in `}</span>\n                <a href={`#/channel/${this.props.channel}`} style={{\n                  color:'gray',\n                  borderBottom: '2px solid gray',\n                  paddingBottom: '.5em'}}>{\n                  `#${this.props.channel}`\n                }</a>\n              </div>\n              <h1>{this.state.title}</h1>\n              <div id={'post-'+this.props.id}></div>\n            </div>\n          </div>\n        </div>\n        <div style={{maxWidth: '600px', margin: '0 auto'}}>\n          <div className=\"flex\" style={{padding: '1.5em 1em'}}>\n            <div className=\"flex-grow\" style={{display: 'block', textAlign: 'left'}}>\n              <div>\n                <span>{rankCaption}</span>\n              </div>\n            </div>\n            <div className=\"flex-grow\" style={{\n              textAlign: 'right',\n              display: (this.props.account == '') ? 'none' : 'block'\n            }}>\n              <div style={{display: !this.state.signing ? 'block' : 'none'}}>\n                <input type=\"text\" name=\"cred\" placeholder={this.state.funds} value={this.state.newCred} onChange={this.onCredChange} style={{textAlign: 'right', fontSize: '1em', border: '0', backgroundColor: 'transparent', outline: 'none'}} />\n                <span style={{paddingRight: '.5em'}}>¢</span>\n                <a onClick={this.signPost} style={{\n                  color: 'black',\n                  display: 'inline-block',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }}>Sign</a>\n              </div>\n              <div style={{display: this.state.signing ? 'block' : 'none'}}>\n                <span>Signing, please wait...</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Create extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      view: 'edit',\n      channel: '',\n      error: ''\n    };\n\n    this.preventHeaderUnbold = (e) => {\n      var action = e.target.getAttribute('data-action') || e.target.parentNode.getAttribute('data-action');\n      if (action == 'bold') {\n        var active = document.getElementsByClassName('medium-editor-button-active');\n        for (var i = 0; i < active.length; i++) {\n          if (/h+/.test(active[i].getAttribute('data-action', ''))) {\n            e.stopPropagation();\n            e.preventDefault();\n            return;\n          }\n        }\n      }\n    };\n\n    this.preventFormatHotkey = (e) => {\n      if (e.ctrlKey || e.metaKey) {\n        switch(e.keyCode){\n          case 66: //ctrl+B or ctrl+b\n          case 98:\n          case 73: //ctrl+I or ctrl+i\n          case 105:\n          case 85: //ctrl+U or ctrl+u\n          case 117:\n            e.stopPropagation();\n            e.preventDefault();\n            return false;\n        }\n      }\n    };\n\n    this.editPost = this.editPost.bind(this);\n    this.previewPost = this.previewPost.bind(this);\n    this.setChannel = this.setChannel.bind(this);\n    this.submitPost = this.submitPost.bind(this);\n  }\n\n  componentDidMount() {\n    var editor = new MediumEditor('#new-post-body', {\n      buttonLabels: 'fontawesome',\n      keyboardCommands: false,\n      toolbar: {\n        buttons: ['bold', 'italic', 'h2', 'h3', 'image', 'anchor', 'pre', 'quote'],\n      },\n      placeholder: {\n        text: 'body',\n        hideOnClick: true\n      }\n    });\n    // Prevent the user from 'unbolding' text marked with h1, h2, hX...\n    document.addEventListener('click', this.preventHeaderUnbold, true);\n\n    // Prevent Bold/Italics/Underline via shortcuts\n    document.addEventListener('keydown', this.preventFormatHotkey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.preventHeaderUnbold);\n    document.removeEventListener('keydown', this.preventFormatHotkey);\n  }\n\n  editPost() {\n    this.setState({\n      view: 'edit',\n      error: ''\n    });\n  }\n\n  previewPost() {\n    this.setState({\n      view: 'preview',\n      error: ''\n    });\n    document.getElementById('new-post-title-preview').innerHTML = document.getElementById('new-post-title').value;\n    document.getElementById('new-post-body-preview').innerHTML = marked(toMarkdown(document.getElementById('new-post-body')));\n  }\n\n  setChannel(e) {\n    this.setState({\n      channel: e.target.innerHTML\n    });\n  }\n\n  submitPost() {\n\n    var errors = [];\n    var title = document.getElementById('new-post-title').value;\n    var body = toMarkdown(document.getElementById('new-post-body'));\n\n    var attributes = JSON.stringify({\n      version: '1.0',\n      title: title\n    });\n    var doc = JSON.stringify({\n      version: '1.0',\n      body: body\n    });\n\n    if (credsign.getChannelByName(this.props.channel) == 0) {\n      errors.push('Channel must be between 3 and 30 characters and consist of only letters numbers and underscores');\n    }\n    if (title.length < 10 || title > 100) {\n      errors.push('Title must be between 10 and 100 characters');\n    }\n    this.setState({\n      error: errors.join('. '),\n      view: 'submit'\n    });\n\n    if (errors.length == 0) {\n      var nonce = web3.sha3(web3.toBigNumber(0).constructor.random().toString());\n      this.setState({\n        nonce: nonce\n      })\n      credsign.post.estimateGas(this.props.channel, attributes, doc, nonce, 0, credrank.address, {from: this.props.account, value: 0}, (error, gasEstimate) => {\n        console.log(gasEstimate);\n        gasEstimate += 100000;\n        credsign.post(this.props.channel, attributes, doc, nonce, 0, credrank.address, {from: this.props.account, value: 0, gas: gasEstimate}, (error) => {\n          if (error) {\n            this.setState({\n              error: error.toString()\n            });\n          }\n          else {\n            var watcher = credsign.Store({accountID: this.props.account, nonce: this.state.nonce}, {fromBlock: 'latest'});\n            watcher.watch((error, post) => {\n              watcher.stopWatching();\n              if (error) {\n                this.setState({\n                  error: error.toString()\n                });\n              }\n              else {\n                window.location.hash = `#/channel/${this.props.channel}/post/0x${post.args.contentID.toString(16)}`;\n              }\n            });\n          }\n        });\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div style={{width: '100%', margin: '0 auto'}}>\n        <div style={{width: '100%', backgroundColor: '#FFF'}}>\n          <div style={{maxWidth: '600px', margin: '0 auto'}}>\n            <div style={{padding: '2em 1em'}}>\n              <div style={{display: this.state.view == 'edit' ? 'block' : 'none'}}>\n                <textarea id=\"new-post-title\" type=\"text\" placeholder=\"title\"></textarea>\n                <div id=\"new-post-body\" contentEditable=\"true\"></div>\n              </div>\n              <div style={{display: this.state.view != 'edit' ? 'block' : 'none'}}>\n                <h1 id=\"new-post-title-preview\"></h1>\n                <div id=\"new-post-body-preview\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div style={{width: '100%'}}>\n          <div style={{maxWidth: '600px', margin: '0 auto'}}>\n            <div className=\"flex\" style={{padding: '1.5em 1em'}}>\n              <div className=\"flex-grow\" style={{textAlign: 'left'}}>\n                <a style={{\n                  color: 'black',\n                  display: this.state.view == 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} href={'#/channel/'+this.props.channel}>Cancel</a>\n                <a style={{\n                  display: this.state.view != 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} onClick={this.editPost}>Edit</a>\n              </div>\n              <div className=\"flex-grow\" style={{textAlign: 'right'}}>\n                <a style={{\n                  display: this.state.view == 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} onClick={this.previewPost}>Preview</a>\n                <a style={{\n                  display: this.state.view != 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} onClick={this.submitPost}>Publish</a>\n              </div>\n              <div className='backdrop' style={{\n                width: '100%',\n                height: '100%',\n                opacity: 0.5,\n                backgroundColor: 'black',\n                position: 'fixed',\n                zIndex: 1,\n                display: this.state.view == 'submit' ? 'block' : 'none',\n                top: '0',\n                left: '0'\n              }}>{' '}</div>\n              <div style={{\n                display: this.state.view == 'submit' ? 'block' : 'none',\n                left: '50%',\n                top: '30%',\n                marginLeft: '-300px',\n                position: 'fixed',\n                zIndex: 2,\n                backgroundColor: '#FCFCFC',\n                border: '1px solid #DDD',\n                width: '600px'\n              }}>\n                <div style={{padding: '1em', display: this.state.error.length > 0 ? 'block' : 'none'}}>\n                  <h1>Unable to publish</h1>\n                  <div style={{padding: '1em 0'}}>{this.state.error}</div>\n                  <span onClick={() => this.setState({view: 'edit', error: ''})} style={{\n                    borderBottom: '2px solid black',\n                    padding: '.5em 0',\n                    display: 'inline-block',\n                    cursor: 'pointer'\n                  }}>Close</span>\n                </div>\n                <div style={{padding: '1em', display: this.state.error.length == 0 ? 'block' : 'none'}}>\n                  <h1>Publishing...</h1>\n                  <div style={{padding: '1em 0'}}>{\n                    'Your post is being published. This page will redirect to your post once published. '+\n                    'If you are not redirected after several minutes, try closing this message and publishing again.'\n                  }</div>\n                  <span onClick={() => this.setState({view: 'publish', error: ''})} style={{\n                    borderBottom: '2px solid black',\n                    padding: '.5em 0',\n                    display: 'inline-block',\n                    cursor: 'pointer'\n                  }}>Close</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass RankedChannels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      listItems: [],\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    credrank.getNumChannels(credsign.address, (error, numRanks) => {\n      if (numRanks == 0) {\n        this.setState({\n          loaded: true,\n          listItems: [],\n          count: 0\n        });\n        return;\n      }\n      credrank.getChannelsByRanks(credsign.address, 1, numRanks, (error, tuple) => {\n        var ids = tuple[0];\n        var cred = tuple[1].map((cred) => parseInt(cred.toString()));\n        var ranks = tuple[2].map((rank) => parseInt(rank.toString()));\n\n        var listItems = [];\n        for (var i = 0; i < ids.length; i++) {\n          listItems.push({\n            id: '0x' + ids[i].toString(16),\n            channelName: getChannelName(ids[i]),\n            rank: ranks[i].toString(),\n            cred: cred[i].toString()\n          });\n        }\n        this.setState({\n          loaded: true,\n          listItems: listItems,\n          count: numRanks\n        });\n      });\n    });\n  }\n\n  render() {\n    var listItems = this.state.listItems.map((listItem) => {\n      return (\n        <li key={'li-'+listItem.id}>\n          <a href={`#/channel/${listItem.channelName}`}>\n            <div>{'#' + listItem.channelName}</div>\n            <span>{'Rank '+listItem.rank + ' with '+listItem.cred + '¢ signed'}</span>\n          </a>\n        </li>\n      );\n    });\n    return (\n      <div className='view-align'>\n        <div>\n          <span>{'Top channels'}</span>\n          <span>{' (' + this.state.count + ')'}</span>\n          </div>\n        <ol>{listItems}</ol>\n        <span style={{paddingLeft: '1em', display: listItems.length == 0 ? 'block' : 'none', fontStyle: 'italic'}}>Nothing to see here</span>\n      </div>\n    );\n  }\n}\n\nclass ChannelPosts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false,\n      channelID: -1,\n      listItems: [],\n      filter: \"Top\",\n      count: 0\n    };\n    this.getPosts = this.getPosts.bind(this);\n    this.getTopPosts = this.getTopPosts.bind(this);\n    this.getNewPosts = this.getNewPosts.bind(this);\n    this.onFilterChange = this.onFilterChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPosts(this.state.filter, this.props.channel);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.channel != this.props.channel) {\n      this.getPosts(this.state.filter, nextProps.channel);\n    }\n  }\n\n  onFilterChange(e) {\n    this.getPosts(e.target.innerHTML, this.props.channel);\n  }\n\n  getPosts(filter, channel) {\n    this.setState({\n      filter: filter,\n      menu: false\n    });\n    if (filter == \"Top\") {\n      this.getTopPosts(channel);\n    }\n    else if (filter == \"New\") {\n      this.getNewPosts(channel);\n    }\n  }\n\n  getTopPosts(channel) {\n    credsign.getChannelByName(channel, (error, channelID) => {\n      credrank.getNumContents(credsign.address, channelID, (error, numRanks) => {\n        if (numRanks == 0 || channelID == 0) {\n          this.setState({\n            loaded: true,\n            listItems: [],\n            channelID: channelID,\n            count: 0\n          });\n          return;\n        }\n        else {\n          this.setState({\n            channelID: channelID,\n            channelName: getChannelName(channelID)\n          });\n        }\n        credrank.getContentsByRanks(credsign.address, channelID, 1, numRanks, (error, tuple) => {\n          var listItems = [];\n          var idToIndex = {};\n          for (var i = 0; i < tuple[0].length; i++) {\n            var id = '0x' + tuple[0][i].toString(16);\n            idToIndex[id] = i;\n            listItems.push({\n              id: id,\n              cred: parseInt(tuple[1][i].toString()),\n              rank: parseInt(tuple[2][i].toString())\n            });\n          }\n          credsign.Post({contentID: tuple[0]}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n            posts.forEach((post) => {\n              var index = idToIndex['0x' + post.args.contentID.toString(16)];\n              listItems[index].title = getContentTitle(post.args.attributes);\n              listItems[index].timestamp = post.args.timestamp;\n            });\n            this.setState({\n              toggle: !this.state.toggle,\n              listItems: listItems,\n              count: numRanks\n            });\n          });\n        });\n      });\n    });\n  }\n\n  getNewPosts(channel) {\n    credsign.getChannelByName(channel, (error, channelID) => {\n      credsign.getNumContents(channelID, (error, numRanks) => {\n        if (numRanks == 0) {\n          this.setState({\n            loaded: true,\n            listItems: [],\n            count: 0\n          });\n          return;\n        }\n        else {\n          this.setState({\n            channelID: channelID,\n            channelName: getChannelName(channelID)\n          });\n        }\n        var sequenceNums = [Array.from(Array(numRanks))].map((_, i) => i + 1);\n        credsign.Post({channelID: channelID, sequenceNum: sequenceNums}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n          var ids = [];\n          var listItems = [];\n          for (var i = 0; i < posts.length; i++) {\n            ids.push(posts[i].args.contentID);\n            listItems.push({\n              id: '0x' + ids[i].toString(16),\n              title: getContentTitle(posts[i].args.attributes),\n              timestamp: posts[i].args.timestamp\n            });\n          };\n          credrank.getCredRanksByContents(credsign.address, ids, (error, credRanks) => {\n            for (var i = 0; i < posts.length; i++) {\n              listItems[i].cred = parseInt(credRanks[0][i].toString());\n              listItems[i].rank = parseInt(credRanks[1][i].toString());\n            }\n            this.setState({\n              toggle: !this.state.toggle,\n              listItems: listItems.reverse(),\n              count: numRanks\n            });\n          });\n        });\n      })\n    });\n  }\n\n  render() {\n    var listItems = this.state.listItems.map((listItem) => {\n      var caption = '';\n      console.log(listItem);\n      if (listItem.rank > 0) {\n        caption = `Rank ${listItem.rank} with ${listItem.cred}¢`;\n        if (listItem.signed) {\n          if (listItem.funds > 0) {\n            caption += ` - Signed with ${listItem.funds}¢`;\n          }\n          else {\n            caption += ` - Signed`;\n          }\n        }\n      }\n      else {\n        caption = `Unranked in #${this.state.channelName}`;\n      }\n      return (\n        <li key={'li-'+listItem.id}>\n          <a href={`#/channel/${this.props.channel}/post/${listItem.id}`}>\n            <div>{listItem.title}</div>\n            <span>{caption}</span>\n          </a>\n        </li>\n      );\n    });\n    return (\n      <div className='view-align'>\n        <div style={{position: 'relative', display: this.state.channelID > 0 ? 'block' : 'none'}}>\n          <span onClick={() => this.setState({menu: !this.state.menu})} style={{cursor: 'pointer'}}>{`${this.state.filter} ▾`}</span>\n          <ul onMouseLeave={() => this.setState({menu: false})} style={{position: 'absolute', top: '1.5em', left: '0', display: this.state.menu ? 'block' : 'none'}}>\n            <li onClick={this.onFilterChange}>Top</li>\n            <li onClick={this.onFilterChange}>New</li>\n          </ul>\n          <span>{` posts in #${this.props.channel}`}</span>\n          <span>{' (' + this.state.count + ')'}</span>\n        </div>\n        <div style={{display: this.state.channelID == 0 ? 'block' : 'none'}}>Invalid channel</div>\n        <ol>{listItems}</ol>\n        <span style={{paddingLeft: '1em', display: listItems.length == 0 ? 'block' : 'none', fontStyle: 'italic'}}>{\n          this.state.channelID != 0\n            ? `Nothing to see here`\n            : `Channels must be between 3 and 30 characters consisting of letters, numbers, and underscores.`\n        }</span>\n      </div>\n    );\n  }\n}\n\nclass Account extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: this.props.filter || 'Posted',\n      toggle: false,\n      listItems: [],\n      count: 0\n    };\n\n    this.getPosts = this.getPosts.bind(this);\n    this.getAddress = this.getAddress.bind(this);\n    this.onFilterChange = this.onFilterChange.bind(this);\n  }\n\n  getAddress(input) {\n    if (parseInt(input) > 0)\n      return input;\n    else\n      return '-1';\n  }\n\n  componentDidMount() {\n    var account = this.getAddress(this.props.account);\n    this.getPosts(this.state.filter, account);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    var account = this.getAddress(nextProps.account);\n    if (account != this.props.account) {\n      this.getPosts(this.state.filter, account);\n    }\n  }\n\n  getPosts(filter, account) {\n    this.setState({\n      menu: false,\n      filter: filter\n    });\n    var listItems = [];\n    var signedContents = {\n      sequence: [],\n      funds: {}\n    };\n    if (filter == 'Posted') {\n      credsign.Post({accountID: account}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n        var ids = [];\n        posts.forEach((post) => {\n          ids.push(post.args.contentID);\n          listItems.push({\n            id: '0x' + post.args.contentID.toString(16),\n            title: getContentTitle(post.args.attributes),\n            channelName: getChannelName(post.args.channelID),\n            timestamp: post.args.timestamp\n          });\n        });\n        credsign.Sign({accountID: account}, {fromBlock: 0, toBlock: 'latest'}).get((error, signatures) => {\n          signatures.forEach((signature) => {\n            aggregateSignature(signedContents, signature);\n          });\n          credrank.getCredRanksByContents(credsign.address, ids, (error, credRanks) => {\n            listItems.forEach((listItem, i) => {\n              listItem.cred = parseInt(credRanks[0][i].toString());\n              listItem.rank = parseInt(credRanks[1][i].toString());\n              listItem.signed = signedContents.funds[listItem.id] !== undefined;\n              listItem.funds = signedContents.funds[listItem.id] || 0;\n            })\n            this.setState({\n              toggle: !this.state.toggle,\n              listItems: listItems\n            });\n          });\n        });\n      });\n    }\n    else if (filter == 'Funded') {\n      credsign.Sign({accountID: account}, {fromBlock: 0, toBlock: 'latest'}).get((error, signatures) => {\n        signatures.forEach((signature) => {\n          aggregateSignature(signedContents, signature);\n        });\n        var fundedIDs = signedContents.sequence.filter((contentID) => signedContents.funds[contentID] > 0);\n        credsign.Post({contentID: fundedIDs}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n          credrank.getCredRanksByContents(credsign.address, fundedIDs, (error, credRanks) => {\n            fundedIDs.forEach((contentID, i) => {\n              listItems.push({\n                id: contentID,\n                title: getContentTitle(posts[i].args.attributes),\n                channelName: getChannelName(posts[i].args.channelID),\n                timestamp: posts[i].args.timestamp,\n                cred: parseInt(credRanks[0][i].toString()),\n                rank: parseInt(credRanks[1][i].toString()),\n                signed: true,\n                funds: signedContents.funds[contentID]\n              });\n            });\n            this.setState({\n              toggle: !this.state.toggle,\n              listItems: listItems\n            });\n          });\n        });\n      });\n    }\n    else if (filter == 'Signed') {\n      credsign.Sign({accountID: account}, {fromBlock: 0, toBlock: 'latest'}).get((error, signatures) => {\n        signatures.forEach((signature) => {\n          aggregateSignature(signedContents, signature);\n        });\n        credsign.Post({contentID: signedContents.sequence}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n          credrank.getCredRanksByContents(credsign.address, signedContents.sequence, (error, credRanks) => {\n            signedContents.sequence.forEach((contentID, i) => {\n              listItems.push({\n                id: contentID,\n                title: getContentTitle(posts[i].args.attributes),\n                channelName: getChannelName(posts[i].args.channelID),\n                timestamp: posts[i].args.timestamp,\n                cred: parseInt(credRanks[0][i].toString()),\n                rank: parseInt(credRanks[1][i].toString()),\n                signed: true,\n                funds: signedContents.funds[contentID]\n              });\n            });\n            this.setState({\n              toggle: !this.state.toggle,\n              listItems: listItems\n            });\n          });\n        });\n      });\n    }\n  }\n\n  onFilterChange(e) {\n    var filter = e.target.innerHTML;\n    var account = this.getAddress(this.props.account);\n    this.getPosts(filter, account);\n  }\n\n  render() {\n    var listItems = this.state.listItems.map((listItem) => {\n      var caption = '';\n      if (listItem.rank > 0) {\n        caption = `Rank ${listItem.rank} in #${listItem.channelName} with ${listItem.cred}¢`;\n        if (listItem.signed) {\n          if (listItem.funds > 0) {\n            caption += ` - Signed with ${listItem.funds}¢`;\n          }\n          else {\n            caption += ` - Signed`;\n          }\n        }\n      }\n      else {\n        caption = `Unranked in #${listItem.channelName}`;\n      }\n      return (\n        <li key={'li-'+listItem.id}>\n          <a href={`#/channel/${listItem.channelName}/post/${listItem.id}`}>\n            <div>{listItem.title}</div>\n            <span>{caption}</span>\n          </a>\n        </li>\n      );\n    });\n    return (\n      <div className='view-align'>\n        <div style={{position: 'relative'}}>\n          <span onClick={() => this.setState({menu: !this.state.menu})} style={{cursor: 'pointer'}}>{`${this.state.filter} ▾`}</span>\n          <ul onMouseLeave={() => this.setState({menu: false})} onClick={this.onFilterChange} style={{position: 'absolute', top: '1.5em', left: '0', display: this.state.menu ? 'block' : 'none'}}>\n            <li>Posted</li>\n            <li>Funded</li>\n            <li>Signed</li>\n          </ul>\n          <span>{` by account (${listItems.length})`}</span>\n        </div>\n        <ol>{listItems}</ol>\n        <span style={{paddingLeft: '1em', display: listItems.length == 0 ? 'block' : 'none', fontStyle: 'italic'}}>Nothing to see here</span>\n      </div>\n    );\n  }\n}\n\n// Manage navigation\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      levelOne: '',\n      levelTwo: '',\n      levelThree: '',\n      levelFour: '',\n      account: '',\n      editChannel: true,\n      contentID: null\n    };\n\n\n    this.route = this.route.bind(this);\n    this.setChannel = this.setChannel.bind(this);\n\n    window.addEventListener('hashchange', () => this.route(window.location.hash));\n  }\n\n  componentDidMount() {\n    this.route(window.location.hash);\n    web3.eth.getAccounts((error, accounts) => {\n      if (accounts.length > 0) {\n        var address = accounts[0];\n        window.accountSignatures = {\n          [address]: {\n            sequence: [],\n            funds: {}\n          }\n        };\n        var watcher = credsign.Sign({accountID: address}, {fromBlock: 0, toBlock: 'latest'});\n        watcher.get((error, signatures) => {\n          watcher.watch((error, signature) => {\n            aggregateSignature(accountSignatures[address], signature);\n          });\n          signatures.forEach((signature) => {\n            aggregateSignature(accountSignatures[address], signature);\n          });\n        });\n        this.setState({\n          account: address\n        });\n      }\n      else {\n        this.setState({\n          warn: true\n        });\n      }\n    });\n  }\n\n  setChannel(e) {\n    window.location.hash = \"#/\"+this.state.levelOne+\"/\" + e.target.value;\n    this.route(window.location.hash);\n  }\n\n  componentDidUpdate() {\n    document.getElementById('channel').innerHTML = this.state.levelTwo;\n  }\n\n  route(href) {\n    var path = href.split('/');\n    path[1] = path.length > 1 ? path[1] : 'channel';\n    path[2] = path.length > 2 ? path[2] : '';\n    path[3] = path.length > 3 ? path[3] : '';\n    path[4] = path.length > 4 ? path[4] : '';\n    this.setState({\n      levelOne: path[1],\n      levelTwo: path[2],\n      levelThree: path[3],\n      levelFour: path[4],\n      editChannel: (path[1] == 'channel' && path[3] == '') || (path[1] == 'publish') || (path[1] == 'account')\n    });\n  }\n\n  render() {\n\n    var view;\n    if (this.state.levelOne == 'channel') {\n      if (this.state.levelThree == 'post') {\n        view = <Post id={this.state.levelFour} channel={this.state.levelTwo} account={this.state.account} />;\n      }\n      else if (this.state.levelTwo == '') {\n        view = <RankedChannels />;\n      }\n      else {\n        view = <ChannelPosts channel={this.state.levelTwo} account={this.state.account} />;\n      }\n    }\n    else if (this.state.levelOne == 'publish'){\n      view = <Create channel={this.state.levelTwo} account={this.state.account} />\n    }\n    else if (this.state.levelOne == 'account') {\n      view = <Account account={this.state.levelTwo} />;\n    }\n\n    return (\n      <div style={{padding: '3em 0'}}>\n        <div style={{\n          position: 'fixed',\n          width: '100%',\n          backgroundColor: '#fafafa',\n          borderBottom: '1px solid #DDD',\n          color: 'black',\n          fontSize: '1.5em',\n          top: 0,\n          fontWeight: 'bold',\n          padding: '.5em 0',\n          textAlign: 'center',\n          zIndex: 10\n        }}>\n          <div style={{\n            width: '600px',\n            margin: '0 auto'\n          }}>\n            <div className=\"flex\" style={{padding: '0 .66em'}}>\n              <a href='#/channel' className=\"flex-grow\" style={{\n                color: 'black',\n                textAlign: 'left',\n                display: 'inline-block'\n              }}>Channels</a>\n              <div className=\"flex-shrink\" style={{\n                display: 'inline-block'\n              }}>¢</div>\n              <a href={`#/account/${this.state.account}`} className=\"flex-grow\" style={{\n                color: 'black',\n                textAlign: 'right',\n                display: 'inline-block'\n              }}>Accounts</a>\n            </div>\n          </div>\n        </div>\n        <div style={{width: '600px', margin: '0 auto', padding: '1.5em 0'}}>\n          <div className=\"flex\">\n            <div className=\"flex-grow\">\n              <div className=\"flex\" style={{\n                padding: '0 1em',\n                backgroundColor: 'white',\n                borderTop: '2px solid white',\n                borderBottom: '2px solid white',\n                borderRight: '0',\n                borderLeft: '0'\n              }}>\n                <span className=\"flex-shrink\" style={{\n                  color: 'gray',\n                  padding: '.5em 0',\n                  fontWeight: 'normal'\n                }}>{this.state.levelOne == 'account' ? '@' : '#'}</span>\n                <input type=\"text\" placeholder={this.state.levelOne == \"account\" ? \"0x321...\" : \"channel\"} id=\"channel\" className=\"flex-grow\" style={{\n                  backgroundColor: 'transparent',\n                  fontSize: '1em',\n                  padding: '.5em 0',\n                  margin: 0,\n                  border: 0,\n                  outline: 0,\n                  placeholderTextColor: 'gray',\n                  color: 'black'\n                }} value={this.state.levelTwo} onChange={this.setChannel}></input>\n              </div>\n            </div>\n            <div className=\"flex-shrink\">\n              <a style={{\n                margin: '0 1em',\n                color: 'black',\n                display: (this.state.levelOne == 'publish' || this.state.account == '') ? 'none' : 'block',\n                borderBottom: '2px solid black',\n                padding: '.5em 0'\n              }} href={`#/publish/${this.state.levelOne == 'channel' ? this.state.levelTwo : ''}`}>Publish</a>\n            </div>\n          </div>\n        </div>\n        <div style={{display: this.state.warn ? 'block': 'none'}}>\n          <div className='backdrop' style={{\n            width: '100%',\n            height: '100%',\n            opacity: 0.5,\n            backgroundColor: 'black',\n            position: 'fixed',\n            zIndex: 1,\n            top: '0',\n            left: '0'\n          }}>{' '}</div>\n          <div style={{\n            left: '50%',\n            top: '30%',\n            marginLeft: '-300px',\n            zIndex: 2,\n            position: 'fixed',\n            backgroundColor: '#FCFCFC',\n            border: '1px solid #DDD',\n            width: '600px'\n          }}>\n            <div style={{padding: '1em'}}>\n              <h1>Please link an account</h1>\n              <div style={{padding: '1em 0'}}>{\n                'CredSign was unable to detect your Ethereum account. '+\n                'If you do not have an account, please install Mist or '+\n                'MetaMask and create one. You will need an account to '+\n                'publish and sign content.'\n              }</div>\n              <span onClick={() => this.setState({warn: false})} style={{\n                borderBottom: '2px solid black',\n                padding: '.5em 0',\n                display: 'inline-block',\n                cursor: 'pointer'\n              }}>Close</span>\n            </div>\n          </div>\n        </div>\n        <div>{view}</div>\n        <div style={{\n          width: '100%',\n          position: 'fixed',\n          backgroundColor: '#fafafa',\n          borderTop: '1px solid #DDD',\n          color: 'gray',\n          bottom: 0,\n          fontSize: '69%',\n          fontWeight: 'bold',\n          padding: '1em 0',\n          textTransform: 'uppercase',\n          textAlign: 'center',\n          zIndex: 10\n        }}>\n          <span>{'Message us on '}</span>\n          <a href={'https://facebook.com/CredSign'} style={{\n            padding: '.5em 0',\n            borderBottom: '2px solid gray',\n            display: 'inline-block',\n            color: 'gray'\n          }}>Facebook</a>\n          <span>{' · View source on '}</span>\n          <a href={'https://github.com/CredSign/credsign.github.io'} style={{\n            padding: '.5em 0',\n            borderBottom: '2px solid gray',\n            display: 'inline-block',\n            color: 'gray'\n          }}>Github</a>\n          <span>{' · Usage governed by '}</span>\n          <a\n            href=\"https://github.com/CredSign/credsign.github.io/blob/master/LICENSE\"\n            style={{\n              color: 'gray',\n              padding: '.5em 0',\n              display: 'inline-block',\n              borderBottom: '2px solid gray'\n            }}>terms</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nwindow.App = App;\n","// Adapted from https://gist.github.com/Youwotma/1762527\n// No license provided in original, so assume license of this repo.\n\nwindow.toMarkdown = (node) => {\n\n    var markdownEscape = (text) => {\n        return text ? text.replace(/\\s+/g, \" \").replace(/[\\\\\\-*_>#]/g, \"\\\\$&\") : '';\n    }\n\n    var repeat = (str, times) => {\n        return (new Array(times+1)).join(str);\n    }\n\n    var childsToMarkdown = (tree, mode) => {\n        var res = \"\";\n        for (var i = 0, l = tree.childNodes.length; i < l; i++) {\n            res += nodeToMarkdown(tree.childNodes[i], mode);\n        }\n        return res;\n    }\n\n    var nodeToMarkdown = (tree, mode) => {\n        var nl = \"\\n\\n\";\n        if (tree.nodeType == 3) { // Text node\n            return markdownEscape(tree.nodeValue);\n        }\n        else if (tree.nodeType == 1) {\n            if (mode == \"block\") {\n                switch (tree.tagName.toLowerCase()) {\n                    case \"br\":\n                        return nl;\n                    case \"hr\":\n                        return nl + \"---\" + nl;\n                    // Block container elements\n                    case \"p\":\n                    case \"div\":\n                    case \"section\":\n                    case \"address\":\n                    case \"center\":\n                        return nl + childsToMarkdown(tree, \"block\") + nl;\n                    case \"ul\":\n                        return nl + childsToMarkdown(tree, \"u\") + nl;\n                    case \"ol\":\n                        return nl + childsToMarkdown(tree, \"o\") + nl;\n                    case \"pre\":\n                        return nl + \"    \" + childsToMarkdown(tree, \"inline\") + nl;\n                    case \"code\":\n                        if (tree.childNodes.length == 1) {\n                            break; // use the inline format\n                        }\n                        return nl + \"    \" + childsToMarkdown(tree, \"inline\") + nl;\n                    case \"h1\":\n                    case \"h2\":\n                    case \"h3\":\n                    case \"h4\":\n                    case \"h5\":\n                    case \"h6\":\n                        return nl + repeat(\"#\", +tree.tagName[1]) + \"  \" + childsToMarkdown(tree, \"inline\") + nl;\n                    case \"blockquote\":\n                        return nl + \"> \" + childsToMarkdown(tree, \"inline\") + nl;\n                }\n            }\n            if (/^[ou]+$/.test(mode)) {\n                if (tree.tagName == \"LI\") {\n                    return \"\\n\" + repeat(\"  \", mode.length - 1) + (mode[mode.length-1]==\"o\"?\"1. \":\"- \") + childsToMarkdown(tree, mode+\"l\");\n                }\n                else{\n                    console.log(\"[toMarkdown] - invalid element at this point \" + mode.tagName);\n                    return childsToMarkdown(tree, \"inline\");\n                }\n            }\n            else if (/^[ou]+l$/.test(mode)) {\n                if (tree.tagName == \"UL\") {\n                    return childsToMarkdown(tree,mode.substr(0,mode.length-1)+\"u\");\n                }\n                else if (tree.tagName == \"OL\") {\n                    return childsToMarkdown(tree,mode.substr(0,mode.length-1)+\"o\");\n                }\n            }\n\n            // Inline tags\n            switch (tree.tagName.toLowerCase()) {\n                case \"strong\":\n                case \"b\":\n                    return \"**\" + childsToMarkdown(tree,\"inline\") + \"**\";\n                case \"em\":\n                case \"i\":\n                    return \"_\" + childsToMarkdown(tree,\"inline\") + \"_\";\n                case \"code\": // Inline version of code\n                    return \"`\" + childsToMarkdown(tree,\"inline\") + \"`\";\n                case \"a\":\n                    return \"[\" + childsToMarkdown(tree,\"inline\") + \"](\" + tree.getAttribute(\"href\") + \")\";\n                case \"img\":\n                    return nl + \"![: \" + markdownEscape(tree.getAttribute(\"alt\")) + \"](\" + tree.getAttribute(\"src\") + \")\" + nl;\n                case \"script\":\n                case \"style\":\n                case \"meta\":\n                    return \"\";\n                default:\n                    console.log(\"[toMarkdown] - undefined element \" + tree.tagName);\n                    return childsToMarkdown(tree,mode);\n            }\n        }\n    }\n\n    return nodeToMarkdown(node, \"block\").replace(/[\\n]{2,}/g,\"\\n\\n\").replace(/^[\\n]+/,\"\").replace(/[\\n]+$/,\"\");\n}\n"],"sourceRoot":"/source/"}
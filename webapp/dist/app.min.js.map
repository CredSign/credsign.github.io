{"version":3,"sources":["app.jsx","toMarkdown.js"],"names":["Post","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","newCred","title","body","cred","rank","publisher","timestamp","signature","error","signPost","bind","voidSignature","onCredChange","_this2","credsign","Store","contentID","id","fromBlock","toBlock","get","posts","getContentCredSignedByUser","account","credSigned","batchread","getCredRanksByContents","credRanks","setState","args","toString","parseInt","document","getElementById","innerHTML","marked","e","target","value","_this3","CRED","times","sign","estimateGas","from","gasEstimate","console","log","gas","result","_this4","void","React","createElement","style","backgroundColor","maxWidth","margin","padding","color","paddingBottom","Date","toLocaleString","href","borderBottom","substr","channel","display","flex","textAlign","type","name","placeholder","onChange","fontSize","border","outline","paddingRight","onClick","textTransform","fontWeight","Component","Create","_this5","view","preventHeaderUnbold","action","getAttribute","parentNode","active","getElementsByClassName","i","length","test","stopPropagation","preventDefault","preventFormatHotkey","ctrlKey","metaKey","keyCode","editPost","previewPost","setChannel","submitPost","MediumEditor","buttonLabels","keyboardCommands","toolbar","buttons","text","hideOnClick","addEventListener","removeEventListener","toMarkdown","_this6","errors","getChannelByName","push","join","post","watcher","watch","stopWatching","window","location","hash","_this7","width","contentEditable","className","height","opacity","position","zIndex","top","left","marginLeft","cursor","RankedChannels","_this8","loaded","listItems","count","_this9","getNumChannels","numRanks","getChannelsByRanks","tuple","ids","map","ranks","channelName","String","fromCharCode","mod","div","floor","listItem","key","ChannelPosts","_this10","toggle","filter","getPosts","getTopPosts","getNewPosts","_this11","channelID","getNumContents","getContentsByRanks","idToIndex","forEach","index","_this12","unshift","menu","nextProps","_this13","onMouseLeave","Account","_this14","getAddress","getPostsPublished","getPostsSigned","getPostsFunded","onFilterChange","input","address","_this15","postEvents","postEvent","_this16","Sign","signatory","signatures","_this17","getContentsFundedByUser","_this18","App","_this19","levelOne","levelTwo","levelThree","levelFour","editChannel","route","_this20","web3","eth","getAccounts","accounts","warn","path","split","_this21","borderTop","borderRight","borderLeft","placeholderTextColor","bottom","node","markdownEscape","replace","repeat","str","Array","childsToMarkdown","tree","mode","res","l","childNodes","nodeToMarkdown","nl","nodeType","nodeValue","tagName","toLowerCase"],"mappings":"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","file":"app.min.js","sourcesContent":["class Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newCred: '',\n      title: '',\n      body: '',\n      cred: 0,\n      rank: 0,\n      publisher: '0x0',\n      timestamp: '0',\n      signature: 0,\n      error: ''\n    };\n    this.signPost = this.signPost.bind(this);\n    this.voidSignature = this.voidSignature.bind(this);\n    this.onCredChange = this.onCredChange.bind(this);\n  }\n\n  componentDidMount() {\n    credsign.Store({contentID: this.props.id}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n      credsign.getContentCredSignedByUser(this.props.account, this.props.id, (error, credSigned) => {\n        batchread.getCredRanksByContents([this.props.id], (error, credRanks) => {\n          this.setState({\n            title: posts[0].args.title,\n            body: posts[0].args.body,\n            cred: credRanks[0][0].toString(10),\n            rank: credRanks[1][0].toString(10),\n            publisher: posts[0].args.publisher,\n            signature: parseInt(credSigned.toString()),\n            timestamp: posts[0].args.timestamp\n          });\n        });\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    document.getElementById('post-'+this.props.id).innerHTML = marked(this.state.body);\n  }\n\n  onCredChange(e) {\n    this.setState({\n      newCred: parseInt(e.target.value) || ''\n    });\n  }\n\n  signPost() {\n    this.setState({\n      error: 'Confirming on the network, please wait'\n    });\n    var newCred = this.state.newCred;\n    var value = credsign.CRED().times(newCred);\n    credsign.sign.estimateGas(this.props.id, newCred, {from: this.props.account, value: value}, (error, gasEstimate) => {\n      console.log(gasEstimate);\n      credsign.sign(this.props.id, newCred, {from: this.props.account, value: value, gas: gasEstimate}, (error, result) => {\n        if (!error) {\n          this.setState({\n            newCred: '',\n            signature: newCred,\n            error: ''\n          });\n        }\n        else {\n          this.setState({\n            error: error.toString()\n          });\n        }\n      });\n    });\n  }\n\n  voidSignature() {\n    this.setState({\n      error: 'Confirming on the network, please wait'\n    });\n    credsign.void.estimateGas(this.props.id, {from: this.props.account, value: 0}, (error, gasEstimate) => {\n      console.log(gasEstimate);\n      credsign.void(this.props.id, {from: this.props.account, value: 0, gas: gasEstimate}, (error, result) => {\n        if (!error) {\n          this.setState({\n            signature: 0,\n            error: ''\n          });\n        }\n        else {\n          this.setState({\n            error: error.toString()\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{backgroundColor: '#FFF'}}>\n          <div style={{maxWidth: '600px', margin: '0 auto'}}>\n            <div style={{padding: '1.5em 1em'}}>\n              <div style={{color: 'gray', paddingBottom: '1em'}}>\n                <span>{`Posted ${new Date(this.state.timestamp* 1000).toLocaleString()} by `}</span>\n                <a href={`#/account/${this.state.publisher}`} style={{\n                  borderBottom: '2px solid gray',\n                  padding: '.5em 0',\n                  color: 'gray'\n                }}>{`${this.state.publisher.substr(0,5)}...${this.state.publisher.substr(-3)}`}</a>\n                <span>{` in `}</span>\n                <a href={`#/channel/${this.props.channel}`} style={{\n                  color:'gray',\n                  borderBottom: '2px solid gray',\n                  paddingBottom: '.5em'}}>{\n                  `#${this.props.channel}`\n                }</a>\n              </div>\n              <h1 style={{}}>{this.state.title}</h1>\n              <div id={'post-'+this.props.id}></div>\n            </div>\n          </div>\n        </div>\n        <div style={{maxWidth: '600px', margin: '0 auto'}}>\n          <div style={{padding: '1.5em 1em', display: 'flex'}}>\n            <div style={{display: 'block', flex: '1 0 0', textAlign: 'left'}}>\n              <div style={{}}>\n                <span>{`Rank ${this.state.rank} with ${this.state.cred}¢`}</span>\n              </div>\n            </div>\n            <div style={{\n              flex: '1 0 0',\n              textAlign: 'right',\n              display: (this.props.account == '') ? 'none' : 'block',\n            }}>\n              <input type=\"text\" name=\"cred\" placeholder={this.state.signature} value={this.state.newCred} onChange={this.onCredChange} style={{textAlign: 'right', fontSize: '1em', border: '0', backgroundColor: 'transparent', outline: 'none'}} />\n              <span style={{paddingRight: '.5em'}}>¢</span>\n              <a onClick={this.signPost} style={{\n                color: 'black',\n                display: 'inline-block',\n                borderBottom: '2px solid black',\n                paddingBottom: '.5em'\n              }}>Sign</a>\n            </div>\n          </div>\n          <div style={{color: 'red', fontSize:'60%', textTransform: 'uppercase', fontWeight: 'bold', textAlign: 'center'}}>{this.state.error}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Create extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      view: 'edit',\n      channel: '',\n      error: ''\n    };\n\n    this.preventHeaderUnbold = (e) => {\n      var action = e.target.getAttribute('data-action') || e.target.parentNode.getAttribute('data-action');\n      if (action == 'bold') {\n        var active = document.getElementsByClassName('medium-editor-button-active');\n        for (var i = 0; i < active.length; i++) {\n          if (/h+/.test(active[i].getAttribute('data-action', ''))) {\n            e.stopPropagation();\n            e.preventDefault();\n            return;\n          }\n        }\n      }\n    };\n\n    this.preventFormatHotkey = (e) => {\n      if (e.ctrlKey || e.metaKey) {\n        switch(e.keyCode){\n          case 66: //ctrl+B or ctrl+b\n          case 98:\n          case 73: //ctrl+I or ctrl+i\n          case 105:\n          case 85: //ctrl+U or ctrl+u\n          case 117:\n            e.stopPropagation();\n            e.preventDefault();\n            return false;\n        }\n      }\n    };\n\n    this.editPost = this.editPost.bind(this);\n    this.previewPost = this.previewPost.bind(this);\n    this.setChannel = this.setChannel.bind(this);\n    this.submitPost = this.submitPost.bind(this);\n  }\n\n  componentDidMount() {\n    var editor = new MediumEditor('#new-post-body', {\n      buttonLabels: 'fontawesome',\n      keyboardCommands: false,\n      toolbar: {\n        buttons: ['bold', 'italic', 'h2', 'h3', 'image', 'anchor', 'pre', 'quote'],\n      },\n      placeholder: {\n        text: 'body',\n        hideOnClick: true\n      }\n    });\n    // Prevent the user from 'unbolding' text marked with h1, h2, hX...\n    document.addEventListener('click', this.preventHeaderUnbold, true);\n\n    // Prevent Bold/Italics/Underline via shortcuts\n    document.addEventListener('keydown', this.preventFormatHotkey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.preventHeaderUnbold);\n    document.removeEventListener('keydown', this.preventFormatHotkey);\n  }\n\n  editPost() {\n    this.setState({\n      view: 'edit',\n      error: ''\n    });\n  }\n\n  previewPost() {\n    this.setState({\n      view: 'preview',\n      error: ''\n    });\n    document.getElementById('new-post-title-preview').innerHTML = document.getElementById('new-post-title').value;\n    document.getElementById('new-post-body-preview').innerHTML = marked(toMarkdown(document.getElementById('new-post-body')));\n  }\n\n  setChannel(e) {\n    this.setState({\n      channel: e.target.innerHTML\n    });\n  }\n\n  submitPost() {\n\n    var errors = [];\n    var title = document.getElementById('new-post-title').value;\n    var body = toMarkdown(document.getElementById('new-post-body'));\n\n    if (credsign.getChannelByName(this.props.channel) == 0) {\n      errors.push('Channel must be between 3 and 30 characters and consist of only letters numbers and underscores');\n    }\n    if (title.length < 3 || title > 100) {\n      errors.push('Title must be between 3 and 100 characters');\n    }\n    this.setState({\n      error: errors.join('. '),\n      view: 'submit'\n    });\n\n    if (errors.length == 0) {\n      credsign.post.estimateGas(this.props.channel, title, body, {from: this.props.account, value: 0}, (error, gasEstimate) => {\n        console.log(gasEstimate);\n        credsign.post(this.props.channel, title, body, {from: this.props.account, value: 0, gas: gasEstimate}, (error) => {\n          if (error) {\n            this.setState({\n              error: error.toString()\n            });\n          }\n          else {\n            var watcher = credsign.Post({publisher: this.props.account}, {fromBlock: 'latest'});\n            watcher.watch((error, post) => {\n              watcher.stopWatching();\n              if (error) {\n                this.setState({\n                  error: error.toString()\n                });\n              }\n              else {\n                window.location.hash = `#/channel/${this.props.channel}/post/0x${post.args.contentID.toString(16)}`;\n              }\n            });\n          }\n        });\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div style={{width: '100%', margin: '0 auto'}}>\n        <div style={{width: '100%', backgroundColor: '#FFF'}}>\n          <div style={{maxWidth: '600px', margin: '0 auto'}}>\n            <div style={{padding: '2em 1em'}}>\n              <div style={{display: this.state.view == 'edit' ? 'block' : 'none'}}>\n                <textarea id=\"new-post-title\" type=\"text\" placeholder=\"title\"></textarea>\n                <div id=\"new-post-body\" contentEditable=\"true\"></div>\n              </div>\n              <div style={{display: this.state.view != 'edit' ? 'block' : 'none'}}>\n                <h1 id=\"new-post-title-preview\"></h1>\n                <div id=\"new-post-body-preview\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div style={{width: '100%'}}>\n          <div style={{maxWidth: '600px', margin: '0 auto'}}>\n            <div style={{display: 'flex', padding: '1.5em 1em'}}>\n              <div style={{flex: '1 0 0', textAlign: 'left'}}>\n                <a style={{\n                  color: 'black',\n                  display: this.state.view == 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} href={'#/channel/'+this.props.channel}>Cancel</a>\n                <a style={{\n                  display: this.state.view != 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} onClick={this.editPost}>Edit</a>\n              </div>\n              <div style={{flex: '1 0 0', textAlign: 'right'}}>\n                <a style={{\n                  display: this.state.view == 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} onClick={this.previewPost}>Preview</a>\n                <a style={{\n                  display: this.state.view != 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} onClick={this.submitPost}>Publish</a>\n              </div>\n              <div className='backdrop' style={{\n                width: '100%',\n                height: '100%',\n                opacity: 0.5,\n                backgroundColor: 'black',\n                position: 'fixed',\n                zIndex: 1,\n                display: this.state.view == 'submit' ? 'block' : 'none',\n                top: '0',\n                left: '0'\n              }}>{' '}</div>\n              <div style={{\n                display: this.state.view == 'submit' ? 'block' : 'none',\n                left: '50%',\n                top: '30%',\n                marginLeft: '-300px',\n                position: 'fixed',\n                zIndex: 2,\n                backgroundColor: '#FCFCFC',\n                border: '1px solid #DDD',\n                width: '600px'\n              }}>\n                <div style={{padding: '1em', display: this.state.error.length > 0 ? 'block' : 'none'}}>\n                  <h1>Unable to publish...</h1>\n                  <div style={{padding: '1em 0'}}>{this.state.error}</div>\n                  <span onClick={() => this.setState({view: 'edit', error: ''})} style={{\n                    borderBottom: '2px solid black',\n                    padding: '.5em 0',\n                    display: 'inline-block',\n                    cursor: 'pointer'\n                  }}>Close</span>\n                </div>\n                <div style={{padding: '1em', display: this.state.error.length == 0 ? 'block' : 'none'}}>\n                  <h1>Publishing...</h1>\n                  <div style={{padding: '1em 0'}}>{\n                    'Your post is being published. This page will redirect to your post once published. '+\n                    'If you are not redirected after several minutes, try closing this message and publishing again.'\n                  }</div>\n                  <span onClick={() => this.setState({view: 'publish', error: ''})} style={{\n                    borderBottom: '2px solid black',\n                    padding: '.5em 0',\n                    display: 'inline-block',\n                    cursor: 'pointer'\n                  }}>Close</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass RankedChannels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      listItems: [],\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    credsign.getNumChannels((error, numRanks) => {\n      if (numRanks == 0) {\n        this.setState({\n          loaded: true,\n          listItems: [],\n          count: 0\n        });\n        return;\n      }\n      batchread.getChannelsByRanks(1, numRanks, (error, tuple) => {\n        var ids = tuple[0];\n        var cred = tuple[1].map((cred) => parseInt(cred.toString()));\n        var ranks = tuple[2].map((rank) => parseInt(rank.toString()));\n\n        var listItems = [];\n        for (var i = 0; i < ids.length; i++) {\n          var id = ids[i];\n          var channelName = '';\n          while (id != 0) {\n            channelName = String.fromCharCode(id.mod(256)) + channelName;\n            id = id.div(256).floor();\n          }\n          listItems.push({\n            id: '0x' + ids[i].toString(16),\n            channelName: channelName,\n            rank: ranks[i].toString(),\n            cred: cred[i].toString()\n          });\n        }\n        this.setState({\n          loaded: true,\n          listItems: listItems,\n          count: numRanks\n        });\n      });\n    });\n  }\n\n  render() {\n    var listItems = this.state.listItems.map((listItem) => {\n      return (\n        <li key={'li-'+listItem.id} value={listItem.rank}>\n          <a href={`#/channel/${listItem.channelName}`}>\n            <div>{'#' + listItem.channelName}</div>\n            <span>{'Rank '+listItem.rank + ' with '+listItem.cred + '¢ signed'}</span>\n          </a>\n        </li>\n      );\n    });\n    return (\n      <div className='view-align'>\n        <div>\n          <span>{'Top channels'}</span>\n          <span>{' (' + this.state.count + ')'}</span>\n          </div>\n        <ol>{listItems}</ol>\n      </div>\n    );\n  }\n}\n\nclass ChannelPosts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false,\n      listItems: [],\n      filter: \"Top\",\n      count: 0\n    };\n    this.getPosts = this.getPosts.bind(this);\n    this.getTopPosts = this.getTopPosts.bind(this);\n    this.getNewPosts = this.getNewPosts.bind(this);\n  }\n  getTopPosts(channel) {\n    credsign.getChannelByName(channel, (error, channelID) => {\n      credsign.getNumContents(channelID, (error, numRanks) => {\n        if (numRanks == 0) {\n          this.setState({\n            loaded: true,\n            listItems: [],\n            count: 0\n          });\n          return;\n        }\n        batchread.getContentsByRanks(1, numRanks, channelID, (error, tuple) => {\n          var ids = tuple[0].map((id) => '0x' + id.toString(16));\n          var cred = tuple[1].map((cred) => parseInt(cred.toString()));\n          var ranks = tuple[2].map((rank) => parseInt(rank.toString()));\n          console.log(ids);\n          var listItems = [];\n          var idToIndex = {};\n          for (var i = 0; i < ids.length; i++) {\n            idToIndex[ids[i]] = i;\n            listItems.push({\n              id: ids[i],\n              rank: ranks[i].toString(),\n              cred: cred[i].toString()\n            });\n          }\n          credsign.Store({contentID: ids}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n            posts.forEach((post) => {\n              var index = idToIndex['0x' + post.args.contentID.toString(16)];\n              listItems[index].title = post.args.title;\n              listItems[index].timestamp = post.args.timestamp;\n            });\n            this.setState({\n              toggle: !this.state.toggle,\n              listItems: listItems,\n              count: numRanks\n            });\n          });\n        });\n      });\n    });\n  }\n\n  getNewPosts(channel) {\n    credsign.getChannelByName(channel, (error, channelID) => {\n      credsign.getNumContents(channelID, (error, numRanks) => {\n        if (numRanks == 0) {\n          this.setState({\n            loaded: true,\n            listItems: [],\n            count: 0\n          });\n          return;\n        }\n        var listItems = [];\n        credsign.Store({channelID: channelID}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n          posts.forEach((post) => {\n            listItems.unshift({\n              id: '0x' + post.args.contentID.toString(16),\n              title: post.args.title,\n              timestamp: post.args.timestamp,\n              cred: 0,\n              rank: 0\n            });\n          });\n          batchread.getCredRanksByContents(listItems.map((post) => post.id), (error, credRanks) => {\n            for (var i = 0; i < posts.length; i++) {\n              listItems[i].cred = credRanks[0][i].toString();\n              listItems[i].rank = credRanks[1][i].toString();\n            }\n            this.setState({\n              toggle: !this.state.toggle,\n              listItems: listItems,\n              count: numRanks\n            });\n          });\n        });\n      })\n    });\n  }\n\n  getPosts(e) {\n    var filter = e.target.innerHTML;\n    this.setState({\n      filter: filter,\n      menu: false\n    });\n    if (filter == \"Top\") {\n      this.getTopPosts(this.props.channel);\n    }\n    else {\n      this.getNewPosts(this.props.channel);\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.filter == \"Top\") {\n      this.getTopPosts(this.props.channel);\n    }\n    else {\n      this.getNewPosts(this.props.channel);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.state.filter == \"Top\") {\n      this.getTopPosts(nextProps.channel);\n    }\n    else {\n      this.getNewPosts(nextProps.channel);\n    }\n  }\n  render() {\n    var listItems = this.state.listItems.map((listItem) => {\n      return (\n        <li key={'li-'+listItem.id} value={listItem.rank}>\n          <a href={`#/channel/${this.props.channel}/post/${listItem.id}`}>\n            <div>{listItem.title}</div>\n            <span>{`Rank ${listItem.rank} with ${listItem.cred}¢ - Posted ${new Date(listItem.timestamp* 1000).toLocaleString()}`}</span>\n          </a>\n        </li>\n      );\n    });\n    return (\n      <div className='view-align'>\n        <div style={{position: 'relative'}}>\n          <span onClick={() => this.setState({menu: !this.state.menu})} style={{cursor: 'pointer'}}>{`${this.state.filter} ▾`}</span>\n          <ul onMouseLeave={() => this.setState({menu: false})} style={{position: 'absolute', top: '1.5em', left: '0', display: this.state.menu ? 'block' : 'none'}}>\n            <li onClick={this.getPosts}>Top</li>\n            <li onClick={this.getPosts}>New</li>\n          </ul>\n          <span>{` posts in #${this.props.channel}`}</span>\n          <span>{' (' + this.state.count + ')'}</span>\n        </div>\n        <ol>{listItems}</ol>\n      </div>\n    );\n  }\n}\n\nclass Account extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: this.props.filter || 'Posted',\n      toggle: false,\n      listItems: [],\n      count: 0\n    };\n\n    this.getPosts = this.getPosts.bind(this);\n    this.getAddress = this.getAddress.bind(this);\n    this.getPostsPublished = this.getPostsPublished.bind(this);\n    this.getPostsSigned = this.getPostsSigned.bind(this);\n    this.getPostsFunded = this.getPostsFunded.bind(this);\n    this.onFilterChange = this.onFilterChange.bind(this);\n  }\n\n  getAddress(input) {\n    if (parseInt(input) > 0)\n      return input;\n    else\n      return '-1';\n  }\n\n  componentDidMount() {\n    var account = this.getAddress(this.props.account);\n    this.getPosts(this.state.filter, account);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    var account = this.getAddress(nextProps.account);\n    this.getPosts(this.state.filter, account);\n  }\n\n  getPosts(filter, account) {\n    this.setState({menu: false, filter: filter});\n    if (filter == 'Posted') {\n      this.getPostsPublished(account);\n    }\n    else if (filter == 'Funded') {\n      this.getPostsFunded(account);\n    }\n    else if (filter == 'Signed') {\n      this.getPostsSigned(account);\n    }\n  }\n\n  onFilterChange(e) {\n    var filter = e.target.innerHTML;\n    var account = this.getAddress(this.props.account);\n    this.getPosts(filter, account);\n  }\n\n  getPostsPublished(address) {\n    credsign.Post({publisher: address}, {fromBlock: 0, toBlock: 'latest'}).get((error, postEvents) => {\n      var ids = [];\n      postEvents.forEach((postEvent) => ids.unshift('0x' + postEvent.args.contentID.toString(16)));\n      var listItems = [];\n      var idToIndex = {};\n      for (var i = 0; i < ids.length; i++) {\n        idToIndex[ids[i]] = i;\n        listItems.unshift({\n          id: ids[i],\n          timestamp: parseInt(postEvents[i].args.timestamp.toString(10))\n        });\n      }\n      batchread.getCredRanksByContents(ids, (error, credRanks) => {\n        for (var i = 0; i < ids.length; i++) {\n          listItems[i].cred = credRanks[0][i].toString();\n          listItems[i].rank = credRanks[1][i].toString();\n        }\n        credsign.Store({contentID: ids}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n          posts.forEach((post) => {\n            var index = idToIndex['0x' + post.args.contentID.toString(16)];\n            var id = post.args.channelID;\n            var channelName = '';\n            while (id != 0) {\n              channelName = String.fromCharCode(id.mod(256)) + channelName;\n              id = id.div(256).floor();\n            }\n            listItems[index].title = post.args.title;\n            listItems[index].channelName = channelName;\n          });\n          this.setState({\n            toggle: !this.state.toggle,\n            listItems: listItems\n          });\n        });\n      });\n    });\n  }\n\n  getPostsSigned(address) {\n    credsign.Sign({signatory: address}, {fromBlock: 0, toBlock: 'latest'}).get((error, signatures) => {\n      var ids = [];\n      signatures.forEach((signature) => ids.unshift('0x' + signature.args.contentID.toString(16)));\n      var listItems = [];\n      var idToIndex = {};\n      for (var i = 0; i < ids.length; i++) {\n        idToIndex[ids[i]] = i;\n        listItems.unshift({\n          id: ids[i],\n          timestamp: parseInt(signatures[i].args.timestamp.toString(10))\n        });\n      }\n      batchread.getCredRanksByContents(ids, (error, credRanks) => {\n        for (var i = 0; i < ids.length; i++) {\n          listItems[i].cred = credRanks[0][i].toString();\n          listItems[i].rank = credRanks[1][i].toString();\n        }\n        credsign.Store({contentID: ids}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n          posts.forEach((post) => {\n            var index = idToIndex['0x' + post.args.contentID.toString(16)];\n            var id = post.args.channelID;\n            var channelName = '';\n            while (id != 0) {\n              channelName = String.fromCharCode(id.mod(256)) + channelName;\n              id = id.div(256).floor();\n            }\n            listItems[index].title = post.args.title;\n            listItems[index].channelName = channelName;\n          });\n          this.setState({\n            toggle: !this.state.toggle,\n            listItems: listItems\n          });\n        });\n      });\n    });\n  }\n\n  getPostsFunded(address) {\n    batchread.getContentsFundedByUser(address, (error, tuple) => {\n      var ids = tuple[0].map((id) => '0x' + id.toString(16));\n      var credSigned = tuple[1].map((cred) => parseInt(cred.toString()));\n      console.log(ids);\n      var listItems = [];\n      var idToIndex = {};\n      for (var i = 0; i < ids.length; i++) {\n        idToIndex[ids[i]] = i;\n        listItems.push({\n          id: ids[i],\n          credSigned: credSigned[i].toString()\n        });\n      }\n      batchread.getCredRanksByContents(ids, (error, credRanks) => {\n        for (var i = 0; i < ids.length; i++) {\n          listItems[i].cred = credRanks[0][i].toString();\n          listItems[i].rank = credRanks[1][i].toString();\n        }\n        credsign.Store({contentID: ids}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n          posts.forEach((post) => {\n            var index = idToIndex['0x' + post.args.contentID.toString(16)];\n            var id = post.args.channelID;\n            var channelName = '';\n            while (id != 0) {\n              channelName = String.fromCharCode(id.mod(256)) + channelName;\n              id = id.div(256).floor();\n            }\n            listItems[index].title = post.args.title;\n            listItems[index].timestamp = post.args.timestamp;\n            listItems[index].channelName = channelName;\n          });\n          this.setState({\n            toggle: !this.state.toggle,\n            listItems: listItems\n          });\n        });\n      });\n    });\n  }\n\n  render() {\n    var listItems = this.state.listItems.map((listItem) => {\n      var action = '';\n      if (this.state.filter == 'Posted') {\n        action = `Posted ${new Date(listItem.timestamp* 1000).toLocaleString()}`;\n      }\n      else if (this.state.filter == 'Funded') {\n        action = `Signed with ${listItem.credSigned}¢`;\n      }\n      else {\n        action = `Signed ${new Date(listItem.timestamp* 1000).toLocaleString()}`;\n      }\n      return (\n        <li key={'li-'+listItem.id} value={listItem.rank}>\n          <a href={`#/channel/${listItem.channelName}/post/${listItem.id}`}>\n            <div>{listItem.title}</div>\n            <span>{`Rank ${listItem.rank} in #${listItem.channelName} with ${listItem.cred}¢ - ${action}`}</span>\n          </a>\n        </li>\n      );\n    });\n    return (\n      <div className='view-align'>\n        <div style={{position: 'relative'}}>\n          <span onClick={() => this.setState({menu: !this.state.menu})} style={{cursor: 'pointer'}}>{`${this.state.filter} ▾`}</span>\n          <ul onMouseLeave={() => this.setState({menu: false})} onClick={this.onFilterChange} style={{position: 'absolute', top: '1.5em', left: '0', display: this.state.menu ? 'block' : 'none'}}>\n            <li>Posted</li>\n            <li>Funded</li>\n            <li>Signed</li>\n          </ul>\n          <span>{` by account (${listItems.length})`}</span>\n        </div>\n        <ol>{listItems}</ol>\n      </div>\n    );\n  }\n}\n\n// Manage navigation\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      levelOne: '',\n      levelTwo: '',\n      levelThree: '',\n      levelFour: '',\n      account: '',\n      editChannel: true,\n      contentID: null\n    };\n\n\n    this.route = this.route.bind(this);\n    this.setChannel = this.setChannel.bind(this);\n\n    window.addEventListener('hashchange', () => this.route(window.location.hash));\n  }\n\n  componentDidMount() {\n    this.route(window.location.hash);\n    web3.eth.getAccounts((error, accounts) => {\n      if (accounts.length > 0) {\n        this.setState({\n          account: accounts[0]\n        });\n      }\n      else {\n        this.setState({\n          warn: true\n        });\n      }\n    });\n  }\n\n  setChannel(e) {\n    window.location.hash = \"#/\"+this.state.levelOne+\"/\" + e.target.value;\n    this.route(window.location.hash);\n  }\n\n  componentDidUpdate() {\n    document.getElementById('channel').innerHTML = this.state.levelTwo;\n  }\n\n  route(href) {\n    var path = href.split('/');\n    path[1] = path.length > 1 ? path[1] : 'channel';\n    path[2] = path.length > 2 ? path[2] : '';\n    path[3] = path.length > 3 ? path[3] : '';\n    path[4] = path.length > 4 ? path[4] : '';\n    this.setState({\n      levelOne: path[1],\n      levelTwo: path[2],\n      levelThree: path[3],\n      levelFour: path[4],\n      editChannel: (path[1] == 'channel' && path[3] == '') || (path[1] == 'publish') || (path[1] == 'account')\n    });\n  }\n\n  render() {\n\n    var view;\n    if (this.state.levelOne == 'channel') {\n      if (this.state.levelThree == 'post') {\n        view = <Post id={this.state.levelFour} channel={this.state.levelTwo} account={this.state.account} />;\n      }\n      else if (this.state.levelTwo == '') {\n        view = <RankedChannels />;\n      }\n      else {\n        view = <ChannelPosts channel={this.state.levelTwo} />;\n      }\n    }\n    else if (this.state.levelOne == 'publish'){\n      view = <Create channel={this.state.levelTwo} account={this.state.account} />\n    }\n    else if (this.state.levelOne == 'account') {\n      view = <Account account={this.state.levelTwo} />;\n    }\n\n    return (\n      <div style={{padding: '3em 0'}}>\n        <div style={{\n          position: 'fixed',\n          width: '100%',\n          backgroundColor: '#fafafa',\n          borderBottom: '1px solid #DDD',\n          color: 'black',\n          fontSize: '1.5em',\n          top: 0,\n          fontWeight: 'bold',\n          padding: '.5em 0',\n          textAlign: 'center',\n          zIndex: 10\n        }}>\n          <div style={{\n            width: '600px',\n            margin: '0 auto'\n          }}>\n            <div style={{padding: '0 .66em', display: 'flex'}}>\n              <a href='#/channel' style={{\n                flex: '1 0 0',\n                color: 'black',\n                textAlign: 'left',\n                display: 'inline-block'\n              }}>Channels</a>\n              <div style={{\n                flex: '0 1 auto',\n                display: 'inline-block'\n              }}>¢</div>\n              <a href={`#/account/${this.state.account}`} style={{\n                flex: '1 0 0',\n                color: 'black',\n                textAlign: 'right',\n                display: 'inline-block'\n              }}>Accounts</a>\n            </div>\n          </div>\n        </div>\n        <div style={{width: '600px', margin: '0 auto', padding: '1.5em 0'}}>\n          <div style={{display: 'flex'}}>\n            <div style={{flex: '1 0 0'}}>\n              <div style={{\n                display: 'flex',\n                padding: '.5em 1em',\n                backgroundColor: 'white',\n                borderTop: '2px solid white',\n                borderBottom: '2px solid white',\n                borderRight: '0',\n                borderLeft: '0'\n              }}>\n                <span style={{\n                  color: 'gray',\n                  flex: '0 1 auto',\n                  fontWeight: 'normal',\n                }}>{this.state.levelOne == 'account' ? '@' : '#'}</span>\n                <input type=\"text\" placeholder={this.state.levelOne == \"account\" ? \"0x321...\" : \"channel\"} id=\"channel\" style={{\n                  backgroundColor: 'transparent',\n                  fontSize: '1em',\n                  padding: 0,\n                  margin: 0,\n                  border: 0,\n                  outline: 0,\n                  flex: '1 0 0',\n                  placeholderTextColor: 'gray',\n                  color: 'black'\n                }} value={this.state.levelTwo} onChange={this.setChannel}></input>\n              </div>\n            </div>\n            <div style={{\n              flex: '0 1 auto'\n            }}>\n              <a style={{\n                margin: '0 1em',\n                color: 'black',\n                display: (this.state.levelOne == 'publish' || this.state.account == '') ? 'none' : 'block',\n                borderBottom: '2px solid black',\n                padding: '.5em 0'\n              }} href={`#/publish/${this.state.levelOne == 'channel' ? this.state.levelTwo : ''}`}>Publish</a>\n            </div>\n          </div>\n        </div>\n        <div style={{display: this.state.warn ? 'block': 'none'}}>\n          <div className='backdrop' style={{\n            width: '100%',\n            height: '100%',\n            opacity: 0.5,\n            backgroundColor: 'black',\n            position: 'fixed',\n            zIndex: 1,\n            top: '0',\n            left: '0'\n          }}>{' '}</div>\n          <div style={{\n            left: '50%',\n            top: '30%',\n            marginLeft: '-300px',\n            zIndex: 2,\n            position: 'fixed',\n            backgroundColor: '#FCFCFC',\n            border: '1px solid #DDD',\n            width: '600px'\n          }}>\n            <div style={{padding: '1em'}}>\n              <h1>Please link an account</h1>\n              <div style={{padding: '1em 0'}}>{\n                'CredSign was unable to detect your Ethereum account. '+\n                'If you do not have an account, please install Mist or '+\n                'MetaMask and create one. You will need an account to '+\n                'publish and sign content.'\n              }</div>\n              <span onClick={() => this.setState({warn: false})} style={{\n                borderBottom: '2px solid black',\n                padding: '.5em 0',\n                display: 'inline-block',\n                cursor: 'pointer'\n              }}>Close</span>\n            </div>\n          </div>\n        </div>\n        <div>{view}</div>\n        <div style={{\n          width: '100%',\n          position: 'fixed',\n          backgroundColor: '#fafafa',\n          borderTop: '1px solid #DDD',\n          color: 'gray',\n          bottom: 0,\n          fontSize: '69%',\n          fontWeight: 'bold',\n          padding: '1em 0',\n          textTransform: 'uppercase',\n          textAlign: 'center',\n          zIndex: 10\n        }}>\n          <span>{'Message us on '}</span>\n          <a href={'https://facebook.com/CredSign'} style={{\n            padding: '.5em 0',\n            borderBottom: '2px solid gray',\n            display: 'inline-block',\n            color: 'gray'\n          }}>Facebook</a>\n          <span>{' · View source on '}</span>\n          <a href={'https://github.com/CredSign/credsign.github.io'} style={{\n            padding: '.5em 0',\n            borderBottom: '2px solid gray',\n            display: 'inline-block',\n            color: 'gray'\n          }}>Github</a>\n          <span>{' · Usage governed by '}</span>\n          <a\n            href=\"https://github.com/CredSign/credsign.github.io/blob/master/LICENSE\"\n            style={{\n              color: 'gray',\n              padding: '.5em 0',\n              display: 'inline-block',\n              borderBottom: '2px solid gray'\n            }}>terms</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nwindow.App = App;\n","// Adapted from https://gist.github.com/Youwotma/1762527\n// No license provided in original, so assume license of this repo.\n\nwindow.toMarkdown = (node) => {\n\n    var markdownEscape = (text) => {\n        return text ? text.replace(/\\s+/g, \" \").replace(/[\\\\\\-*_>#]/g, \"\\\\$&\") : '';\n    }\n\n    var repeat = (str, times) => {\n        return (new Array(times+1)).join(str);\n    }\n\n    var childsToMarkdown = (tree, mode) => {\n        var res = \"\";\n        for (var i = 0, l = tree.childNodes.length; i < l; i++) {\n            res += nodeToMarkdown(tree.childNodes[i], mode);\n        }\n        return res;\n    }\n\n    var nodeToMarkdown = (tree, mode) => {\n        var nl = \"\\n\\n\";\n        if (tree.nodeType == 3) { // Text node\n            return markdownEscape(tree.nodeValue);\n        }\n        else if (tree.nodeType == 1) {\n            if (mode == \"block\") {\n                switch (tree.tagName.toLowerCase()) {\n                    case \"br\":\n                        return nl;\n                    case \"hr\":\n                        return nl + \"---\" + nl;\n                    // Block container elements\n                    case \"p\":\n                    case \"div\":\n                    case \"section\":\n                    case \"address\":\n                    case \"center\":\n                        return nl + childsToMarkdown(tree, \"block\") + nl;\n                    case \"ul\":\n                        return nl + childsToMarkdown(tree, \"u\") + nl;\n                    case \"ol\":\n                        return nl + childsToMarkdown(tree, \"o\") + nl;\n                    case \"pre\":\n                        return nl + \"    \" + childsToMarkdown(tree, \"inline\") + nl;\n                    case \"code\":\n                        if (tree.childNodes.length == 1) {\n                            break; // use the inline format\n                        }\n                        return nl + \"    \" + childsToMarkdown(tree, \"inline\") + nl;\n                    case \"h1\":\n                    case \"h2\":\n                    case \"h3\":\n                    case \"h4\":\n                    case \"h5\":\n                    case \"h6\":\n                        return nl + repeat(\"#\", +tree.tagName[1]) + \"  \" + childsToMarkdown(tree, \"inline\") + nl;\n                    case \"blockquote\":\n                        return nl + \"> \" + childsToMarkdown(tree, \"inline\") + nl;\n                }\n            }\n            if (/^[ou]+$/.test(mode)) {\n                if (tree.tagName == \"LI\") {\n                    return \"\\n\" + repeat(\"  \", mode.length - 1) + (mode[mode.length-1]==\"o\"?\"1. \":\"- \") + childsToMarkdown(tree, mode+\"l\");\n                }\n                else{\n                    console.log(\"[toMarkdown] - invalid element at this point \" + mode.tagName);\n                    return childsToMarkdown(tree, \"inline\");\n                }\n            }\n            else if (/^[ou]+l$/.test(mode)) {\n                if (tree.tagName == \"UL\") {\n                    return childsToMarkdown(tree,mode.substr(0,mode.length-1)+\"u\");\n                }\n                else if (tree.tagName == \"OL\") {\n                    return childsToMarkdown(tree,mode.substr(0,mode.length-1)+\"o\");\n                }\n            }\n\n            // Inline tags\n            switch (tree.tagName.toLowerCase()) {\n                case \"strong\":\n                case \"b\":\n                    return \"**\" + childsToMarkdown(tree,\"inline\") + \"**\";\n                case \"em\":\n                case \"i\":\n                    return \"_\" + childsToMarkdown(tree,\"inline\") + \"_\";\n                case \"code\": // Inline version of code\n                    return \"`\" + childsToMarkdown(tree,\"inline\") + \"`\";\n                case \"a\":\n                    return \"[\" + childsToMarkdown(tree,\"inline\") + \"](\" + tree.getAttribute(\"href\") + \")\";\n                case \"img\":\n                    return nl + \"![: \" + markdownEscape(tree.getAttribute(\"alt\")) + \"](\" + tree.getAttribute(\"src\") + \")\" + nl;\n                case \"script\":\n                case \"style\":\n                case \"meta\":\n                    return \"\";\n                default:\n                    console.log(\"[toMarkdown] - undefined element \" + tree.tagName);\n                    return childsToMarkdown(tree,mode);\n            }\n        }\n    }\n\n    return nodeToMarkdown(node, \"block\").replace(/[\\n]{2,}/g,\"\\n\\n\").replace(/^[\\n]+/,\"\").replace(/[\\n]+$/,\"\");\n}\n"],"sourceRoot":"/source/"}
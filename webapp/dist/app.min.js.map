{"version":3,"sources":["app.jsx","toMarkdown.js"],"names":["Post","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","newCred","title","body","cred","rank","publisher","timestamp","signature","signing","error","signPost","bind","onCredChange","_this2","credsign","Store","contentID","id","fromBlock","toBlock","get","posts","getContentCredSignedByAccount","account","credSigned","batchread","getCredRanksByContents","credRanks","setState","args","toString","parseInt","document","getElementById","innerHTML","marked","e","target","value","_this3","CRED","times","sign","estimateGas","from","gasEstimate","console","log","gas","result","watcher","Sign","signatory","watch","stopWatching","accountCred","_this4","React","createElement","style","backgroundColor","maxWidth","margin","padding","color","paddingBottom","Date","toLocaleString","href","borderBottom","substr","channel","className","width","height","opacity","position","zIndex","display","top","left","marginLeft","border","length","onClick","cursor","textAlign","type","name","placeholder","onChange","fontSize","outline","paddingRight","Component","Create","_this5","view","preventHeaderUnbold","action","getAttribute","parentNode","active","getElementsByClassName","i","test","stopPropagation","preventDefault","preventFormatHotkey","ctrlKey","metaKey","keyCode","editPost","previewPost","setChannel","submitPost","MediumEditor","buttonLabels","keyboardCommands","toolbar","buttons","text","hideOnClick","addEventListener","removeEventListener","toMarkdown","_this6","errors","getChannelByName","push","join","publish","Publish","post","window","location","hash","_this7","contentEditable","RankedChannels","_this8","loaded","listItems","count","_this9","getNumChannels","numRanks","getChannelsByRanks","tuple","ids","map","ranks","channelName","String","fromCharCode","mod","div","floor","listItem","key","ChannelPosts","_this10","toggle","filter","getPosts","getTopPosts","getNewPosts","_this11","channelID","getNumContents","getContentsByRanks","idToIndex","forEach","index","_this12","reverse","menu","nextProps","_this13","onMouseLeave","Account","_this14","getAddress","getPostsPublished","getPostsSigned","getPostsFunded","onFilterChange","input","address","_this15","postEvents","_this16","signatures","undefined","equals","_this17","getContentsFundedByAccount","_this18","App","_this19","levelOne","levelTwo","levelThree","levelFour","editChannel","route","_this20","web3","eth","getAccounts","accounts","warn","path","split","_this21","fontWeight","borderTop","borderRight","borderLeft","placeholderTextColor","bottom","textTransform","node","markdownEscape","replace","repeat","str","Array","childsToMarkdown","tree","mode","res","l","childNodes","nodeToMarkdown","nl","nodeType","nodeValue","tagName","toLowerCase"],"mappings":"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","file":"app.min.js","sourcesContent":["class Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newCred: '',\n      title: '',\n      body: '',\n      cred: 0,\n      rank: 0,\n      publisher: '0x0',\n      timestamp: '0',\n      signature: 0,\n      signing: false,\n      error: ''\n    };\n    this.signPost = this.signPost.bind(this);\n    this.onCredChange = this.onCredChange.bind(this);\n  }\n\n  componentDidMount() {\n    credsign.Store({contentID: this.props.id}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n      credsign.getContentCredSignedByAccount(this.props.account, this.props.id, (error, credSigned) => {\n        batchread.getCredRanksByContents([this.props.id], (error, credRanks) => {\n          this.setState({\n            title: posts[0].args.title,\n            body: posts[0].args.body,\n            cred: credRanks[0][0].toString(10),\n            rank: credRanks[1][0].toString(10),\n            publisher: posts[0].args.publisher,\n            signature: parseInt(credSigned.toString()),\n            timestamp: posts[0].args.timestamp\n          });\n        });\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    document.getElementById('post-'+this.props.id).innerHTML = marked(this.state.body);\n  }\n\n  onCredChange(e) {\n    this.setState({\n      newCred: parseInt(e.target.value) || ''\n    });\n  }\n\n  signPost() {\n    this.setState({\n      signing: true\n    });\n    var newCred = this.state.newCred;\n    credsign.getContentCredSignedByAccount(this.props.account, this.props.id, (error, credSigned) => {\n      var value = credsign.CRED().times(newCred > credSigned ? (newCred - credSigned) : 0);\n      credsign.sign.estimateGas(this.props.id, newCred, {from: this.props.account, value: value}, (error, gasEstimate) => {\n        console.log(gasEstimate);\n        gasEstimate += 100000;\n        credsign.sign(this.props.id, newCred, {from: this.props.account, value: value, gas: gasEstimate}, (error, result) => {\n          if (error) {\n            this.setState({\n              error: error.toString()\n            });\n          }\n          else {\n            var watcher = credsign.Sign({signatory: this.props.account, contentID: this.props.id}, {fromBlock: 'latest'});\n            watcher.watch((error, signature) => {\n              watcher.stopWatching();\n              if (error) {\n                this.setState({\n                  error: error.toString()\n                });\n              }\n              else {\n                batchread.getCredRanksByContents([this.props.id], (error, credRanks) => {\n                  this.setState({\n                    signing: false,\n                    cred: credRanks[0][0].toString(10),\n                    rank: credRanks[1][0].toString(10),\n                    signature: parseInt(signature.args.accountCred.toString())\n                  });\n                });\n              }\n            });\n          }\n        });\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{backgroundColor: '#FFF'}}>\n          <div style={{maxWidth: '600px', margin: '0 auto'}}>\n            <div style={{padding: '1.5em 1em'}}>\n              <div style={{color: 'gray', paddingBottom: '1em'}}>\n                <span>{`Posted ${new Date(this.state.timestamp* 1000).toLocaleString()} by `}</span>\n                <a href={`#/account/${this.state.publisher}`} style={{\n                  borderBottom: '2px solid gray',\n                  padding: '.5em 0',\n                  color: 'gray'\n                }}>{`${this.state.publisher.substr(0,5)}...${this.state.publisher.substr(-3)}`}</a>\n                <span>{` in `}</span>\n                <a href={`#/channel/${this.props.channel}`} style={{\n                  color:'gray',\n                  borderBottom: '2px solid gray',\n                  paddingBottom: '.5em'}}>{\n                  `#${this.props.channel}`\n                }</a>\n              </div>\n              <h1>{this.state.title}</h1>\n              <div id={'post-'+this.props.id}></div>\n            </div>\n          </div>\n        </div>\n        <div style={{maxWidth: '600px', margin: '0 auto'}}>\n          <div className='backdrop' style={{\n            width: '100%',\n            height: '100%',\n            opacity: 0.5,\n            backgroundColor: 'black',\n            position: 'fixed',\n            zIndex: 1,\n            display: this.state.signing ? 'block' : 'none',\n            top: '0',\n            left: '0'\n          }}>{' '}</div>\n          <div style={{\n            display: this.state.signing ? 'block' : 'none',\n            left: '50%',\n            top: '30%',\n            marginLeft: '-300px',\n            position: 'fixed',\n            zIndex: 2,\n            backgroundColor: '#FCFCFC',\n            border: '1px solid #DDD',\n            width: '600px'\n          }}>\n            <div style={{padding: '1em', display: this.state.error.length == 0 ? 'block' : 'none'}}>\n              <h1>Signing...</h1>\n              <div style={{padding: '1em 0'}}>{\n                'If the page does not update after several minutes, try closing this message and signing again.'\n              }</div>\n              <span onClick={() => this.setState({signing: false, error: ''})} style={{\n                borderBottom: '2px solid black',\n                padding: '.5em 0',\n                display: 'inline-block',\n                cursor: 'pointer'\n              }}>Close</span>\n            </div>\n            <div style={{padding: '1em', display: this.state.error.length > 0 ? 'block' : 'none'}}>\n              <h1>Unable to sign</h1>\n              <div style={{padding: '1em 0'}}>{this.state.error}</div>\n              <span onClick={() => this.setState({signing: false, error: ''})} style={{\n                borderBottom: '2px solid black',\n                padding: '.5em 0',\n                display: 'inline-block',\n                cursor: 'pointer'\n              }}>Close</span>\n            </div>\n          </div>\n          <div className=\"flex\" style={{padding: '1.5em 1em'}}>\n            <div className=\"flex-grow\" style={{display: 'block', textAlign: 'left'}}>\n              <div>\n                <span>{`Rank ${this.state.rank} with ${this.state.cred}¢`}</span>\n              </div>\n            </div>\n            <div className=\"flex-grow\" style={{\n              textAlign: 'right',\n              display: (this.props.account == '') ? 'none' : 'block',\n            }}>\n              <input type=\"text\" name=\"cred\" placeholder={this.state.signature} value={this.state.newCred} onChange={this.onCredChange} style={{textAlign: 'right', fontSize: '1em', border: '0', backgroundColor: 'transparent', outline: 'none'}} />\n              <span style={{paddingRight: '.5em'}}>¢</span>\n              <a onClick={this.signPost} style={{\n                color: 'black',\n                display: 'inline-block',\n                borderBottom: '2px solid black',\n                paddingBottom: '.5em'\n              }}>Sign</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Create extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      view: 'edit',\n      channel: '',\n      error: ''\n    };\n\n    this.preventHeaderUnbold = (e) => {\n      var action = e.target.getAttribute('data-action') || e.target.parentNode.getAttribute('data-action');\n      if (action == 'bold') {\n        var active = document.getElementsByClassName('medium-editor-button-active');\n        for (var i = 0; i < active.length; i++) {\n          if (/h+/.test(active[i].getAttribute('data-action', ''))) {\n            e.stopPropagation();\n            e.preventDefault();\n            return;\n          }\n        }\n      }\n    };\n\n    this.preventFormatHotkey = (e) => {\n      if (e.ctrlKey || e.metaKey) {\n        switch(e.keyCode){\n          case 66: //ctrl+B or ctrl+b\n          case 98:\n          case 73: //ctrl+I or ctrl+i\n          case 105:\n          case 85: //ctrl+U or ctrl+u\n          case 117:\n            e.stopPropagation();\n            e.preventDefault();\n            return false;\n        }\n      }\n    };\n\n    this.editPost = this.editPost.bind(this);\n    this.previewPost = this.previewPost.bind(this);\n    this.setChannel = this.setChannel.bind(this);\n    this.submitPost = this.submitPost.bind(this);\n  }\n\n  componentDidMount() {\n    var editor = new MediumEditor('#new-post-body', {\n      buttonLabels: 'fontawesome',\n      keyboardCommands: false,\n      toolbar: {\n        buttons: ['bold', 'italic', 'h2', 'h3', 'image', 'anchor', 'pre', 'quote'],\n      },\n      placeholder: {\n        text: 'body',\n        hideOnClick: true\n      }\n    });\n    // Prevent the user from 'unbolding' text marked with h1, h2, hX...\n    document.addEventListener('click', this.preventHeaderUnbold, true);\n\n    // Prevent Bold/Italics/Underline via shortcuts\n    document.addEventListener('keydown', this.preventFormatHotkey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.preventHeaderUnbold);\n    document.removeEventListener('keydown', this.preventFormatHotkey);\n  }\n\n  editPost() {\n    this.setState({\n      view: 'edit',\n      error: ''\n    });\n  }\n\n  previewPost() {\n    this.setState({\n      view: 'preview',\n      error: ''\n    });\n    document.getElementById('new-post-title-preview').innerHTML = document.getElementById('new-post-title').value;\n    document.getElementById('new-post-body-preview').innerHTML = marked(toMarkdown(document.getElementById('new-post-body')));\n  }\n\n  setChannel(e) {\n    this.setState({\n      channel: e.target.innerHTML\n    });\n  }\n\n  submitPost() {\n\n    var errors = [];\n    var title = document.getElementById('new-post-title').value;\n    var body = toMarkdown(document.getElementById('new-post-body'));\n\n    if (credsign.getChannelByName(this.props.channel) == 0) {\n      errors.push('Channel must be between 3 and 30 characters and consist of only letters numbers and underscores');\n    }\n    if (title.length < 10 || title > 100) {\n      errors.push('Title must be between 10 and 100 characters');\n    }\n    this.setState({\n      error: errors.join('. '),\n      view: 'submit'\n    });\n\n    if (errors.length == 0) {\n      credsign.publish.estimateGas(this.props.channel, title, body, {from: this.props.account, value: 0}, (error, gasEstimate) => {\n        console.log(gasEstimate);\n        gasEstimate += 100000;\n        credsign.publish(this.props.channel, title, body, {from: this.props.account, value: 0, gas: gasEstimate}, (error) => {\n          if (error) {\n            this.setState({\n              error: error.toString()\n            });\n          }\n          else {\n            var watcher = credsign.Publish({publisher: this.props.account}, {fromBlock: 'latest'});\n            watcher.watch((error, post) => {\n              watcher.stopWatching();\n              if (error) {\n                this.setState({\n                  error: error.toString()\n                });\n              }\n              else {\n                window.location.hash = `#/channel/${this.props.channel}/post/0x${post.args.contentID.toString(16)}`;\n              }\n            });\n          }\n        });\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div style={{width: '100%', margin: '0 auto'}}>\n        <div style={{width: '100%', backgroundColor: '#FFF'}}>\n          <div style={{maxWidth: '600px', margin: '0 auto'}}>\n            <div style={{padding: '2em 1em'}}>\n              <div style={{display: this.state.view == 'edit' ? 'block' : 'none'}}>\n                <textarea id=\"new-post-title\" type=\"text\" placeholder=\"title\"></textarea>\n                <div id=\"new-post-body\" contentEditable=\"true\"></div>\n              </div>\n              <div style={{display: this.state.view != 'edit' ? 'block' : 'none'}}>\n                <h1 id=\"new-post-title-preview\"></h1>\n                <div id=\"new-post-body-preview\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div style={{width: '100%'}}>\n          <div style={{maxWidth: '600px', margin: '0 auto'}}>\n            <div className=\"flex\" style={{padding: '1.5em 1em'}}>\n              <div className=\"flex-grow\" style={{textAlign: 'left'}}>\n                <a style={{\n                  color: 'black',\n                  display: this.state.view == 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} href={'#/channel/'+this.props.channel}>Cancel</a>\n                <a style={{\n                  display: this.state.view != 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} onClick={this.editPost}>Edit</a>\n              </div>\n              <div className=\"flex-grow\" style={{textAlign: 'right'}}>\n                <a style={{\n                  display: this.state.view == 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} onClick={this.previewPost}>Preview</a>\n                <a style={{\n                  display: this.state.view != 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} onClick={this.submitPost}>Publish</a>\n              </div>\n              <div className='backdrop' style={{\n                width: '100%',\n                height: '100%',\n                opacity: 0.5,\n                backgroundColor: 'black',\n                position: 'fixed',\n                zIndex: 1,\n                display: this.state.view == 'submit' ? 'block' : 'none',\n                top: '0',\n                left: '0'\n              }}>{' '}</div>\n              <div style={{\n                display: this.state.view == 'submit' ? 'block' : 'none',\n                left: '50%',\n                top: '30%',\n                marginLeft: '-300px',\n                position: 'fixed',\n                zIndex: 2,\n                backgroundColor: '#FCFCFC',\n                border: '1px solid #DDD',\n                width: '600px'\n              }}>\n                <div style={{padding: '1em', display: this.state.error.length > 0 ? 'block' : 'none'}}>\n                  <h1>Unable to publish</h1>\n                  <div style={{padding: '1em 0'}}>{this.state.error}</div>\n                  <span onClick={() => this.setState({view: 'edit', error: ''})} style={{\n                    borderBottom: '2px solid black',\n                    padding: '.5em 0',\n                    display: 'inline-block',\n                    cursor: 'pointer'\n                  }}>Close</span>\n                </div>\n                <div style={{padding: '1em', display: this.state.error.length == 0 ? 'block' : 'none'}}>\n                  <h1>Publishing...</h1>\n                  <div style={{padding: '1em 0'}}>{\n                    'Your post is being published. This page will redirect to your post once published. '+\n                    'If you are not redirected after several minutes, try closing this message and publishing again.'\n                  }</div>\n                  <span onClick={() => this.setState({view: 'publish', error: ''})} style={{\n                    borderBottom: '2px solid black',\n                    padding: '.5em 0',\n                    display: 'inline-block',\n                    cursor: 'pointer'\n                  }}>Close</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass RankedChannels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      listItems: [],\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    credsign.getNumChannels((error, numRanks) => {\n      if (numRanks == 0) {\n        this.setState({\n          loaded: true,\n          listItems: [],\n          count: 0\n        });\n        return;\n      }\n      batchread.getChannelsByRanks(1, numRanks, (error, tuple) => {\n        var ids = tuple[0];\n        var cred = tuple[1].map((cred) => parseInt(cred.toString()));\n        var ranks = tuple[2].map((rank) => parseInt(rank.toString()));\n\n        var listItems = [];\n        for (var i = 0; i < ids.length; i++) {\n          var id = ids[i];\n          var channelName = '';\n          while (id != 0) {\n            channelName = String.fromCharCode(id.mod(256)) + channelName;\n            id = id.div(256).floor();\n          }\n          listItems.push({\n            id: '0x' + ids[i].toString(16),\n            channelName: channelName,\n            rank: ranks[i].toString(),\n            cred: cred[i].toString()\n          });\n        }\n        this.setState({\n          loaded: true,\n          listItems: listItems,\n          count: numRanks\n        });\n      });\n    });\n  }\n\n  render() {\n    var listItems = this.state.listItems.map((listItem) => {\n      return (\n        <li key={'li-'+listItem.id} value={listItem.rank}>\n          <a href={`#/channel/${listItem.channelName}`}>\n            <div>{'#' + listItem.channelName}</div>\n            <span>{'Rank '+listItem.rank + ' with '+listItem.cred + '¢ signed'}</span>\n          </a>\n        </li>\n      );\n    });\n    return (\n      <div className='view-align'>\n        <div>\n          <span>{'Top channels'}</span>\n          <span>{' (' + this.state.count + ')'}</span>\n          </div>\n        <ol>{listItems}</ol>\n      </div>\n    );\n  }\n}\n\nclass ChannelPosts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false,\n      listItems: [],\n      filter: \"Top\",\n      count: 0\n    };\n    this.getPosts = this.getPosts.bind(this);\n    this.getTopPosts = this.getTopPosts.bind(this);\n    this.getNewPosts = this.getNewPosts.bind(this);\n  }\n  getTopPosts(channel) {\n    credsign.getChannelByName(channel, (error, channelID) => {\n      credsign.getNumContents(channelID, (error, numRanks) => {\n        if (numRanks == 0) {\n          this.setState({\n            loaded: true,\n            listItems: [],\n            count: 0\n          });\n          return;\n        }\n        batchread.getContentsByRanks(1, numRanks, channelID, (error, tuple) => {\n          var ids = tuple[0].map((id) => '0x' + id.toString(16));\n          var cred = tuple[1].map((cred) => parseInt(cred.toString()));\n          var ranks = tuple[2].map((rank) => parseInt(rank.toString()));\n          console.log(ids);\n          var listItems = [];\n          var idToIndex = {};\n          for (var i = 0; i < ids.length; i++) {\n            idToIndex[ids[i]] = i;\n            listItems.push({\n              id: ids[i],\n              rank: ranks[i].toString(),\n              cred: cred[i].toString()\n            });\n          }\n          credsign.Store({contentID: ids}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n            posts.forEach((post) => {\n              var index = idToIndex['0x' + post.args.contentID.toString(16)];\n              listItems[index].title = post.args.title;\n              listItems[index].timestamp = post.args.timestamp;\n            });\n            this.setState({\n              toggle: !this.state.toggle,\n              listItems: listItems,\n              count: numRanks\n            });\n          });\n        });\n      });\n    });\n  }\n\n  getNewPosts(channel) {\n    credsign.getChannelByName(channel, (error, channelID) => {\n      credsign.getNumContents(channelID, (error, numRanks) => {\n        if (numRanks == 0) {\n          this.setState({\n            loaded: true,\n            listItems: [],\n            count: 0\n          });\n          return;\n        }\n        var listItems = [];\n        credsign.Store({channelID: channelID}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n          posts.forEach((post) => {\n            listItems.push({\n              id: '0x' + post.args.contentID.toString(16),\n              title: post.args.title,\n              timestamp: post.args.timestamp,\n              cred: 0,\n              rank: 0\n            });\n          });\n          batchread.getCredRanksByContents(listItems.map((post) => post.id), (error, credRanks) => {\n            for (var i = 0; i < posts.length; i++) {\n              listItems[i].cred = credRanks[0][i].toString();\n              listItems[i].rank = credRanks[1][i].toString();\n            }\n            this.setState({\n              toggle: !this.state.toggle,\n              listItems: listItems.reverse(),\n              count: numRanks\n            });\n          });\n        });\n      })\n    });\n  }\n\n  getPosts(e) {\n    var filter = e.target.innerHTML;\n    this.setState({\n      filter: filter,\n      menu: false\n    });\n    if (filter == \"Top\") {\n      this.getTopPosts(this.props.channel);\n    }\n    else {\n      this.getNewPosts(this.props.channel);\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.filter == \"Top\") {\n      this.getTopPosts(this.props.channel);\n    }\n    else {\n      this.getNewPosts(this.props.channel);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.state.filter == \"Top\") {\n      this.getTopPosts(nextProps.channel);\n    }\n    else {\n      this.getNewPosts(nextProps.channel);\n    }\n  }\n  render() {\n    var listItems = this.state.listItems.map((listItem) => {\n      return (\n        <li key={'li-'+listItem.id} value={listItem.rank}>\n          <a href={`#/channel/${this.props.channel}/post/${listItem.id}`}>\n            <div>{listItem.title}</div>\n            <span>{`Rank ${listItem.rank} with ${listItem.cred}¢ - Posted ${new Date(listItem.timestamp* 1000).toLocaleString()}`}</span>\n          </a>\n        </li>\n      );\n    });\n    return (\n      <div className='view-align'>\n        <div style={{position: 'relative'}}>\n          <span onClick={() => this.setState({menu: !this.state.menu})} style={{cursor: 'pointer'}}>{`${this.state.filter} ▾`}</span>\n          <ul onMouseLeave={() => this.setState({menu: false})} style={{position: 'absolute', top: '1.5em', left: '0', display: this.state.menu ? 'block' : 'none'}}>\n            <li onClick={this.getPosts}>Top</li>\n            <li onClick={this.getPosts}>New</li>\n          </ul>\n          <span>{` posts in #${this.props.channel}`}</span>\n          <span>{' (' + this.state.count + ')'}</span>\n        </div>\n        <ol>{listItems}</ol>\n      </div>\n    );\n  }\n}\n\nclass Account extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: this.props.filter || 'Posted',\n      toggle: false,\n      listItems: [],\n      count: 0\n    };\n\n    this.getPosts = this.getPosts.bind(this);\n    this.getAddress = this.getAddress.bind(this);\n    this.getPostsPublished = this.getPostsPublished.bind(this);\n    this.getPostsSigned = this.getPostsSigned.bind(this);\n    this.getPostsFunded = this.getPostsFunded.bind(this);\n    this.onFilterChange = this.onFilterChange.bind(this);\n  }\n\n  getAddress(input) {\n    if (parseInt(input) > 0)\n      return input;\n    else\n      return '-1';\n  }\n\n  componentDidMount() {\n    var account = this.getAddress(this.props.account);\n    this.getPosts(this.state.filter, account);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    var account = this.getAddress(nextProps.account);\n    this.getPosts(this.state.filter, account);\n  }\n\n  getPosts(filter, account) {\n    this.setState({menu: false, filter: filter});\n    if (filter == 'Posted') {\n      this.getPostsPublished(account);\n    }\n    else if (filter == 'Funded') {\n      this.getPostsFunded(account);\n    }\n    else if (filter == 'Signed') {\n      this.getPostsSigned(account);\n    }\n  }\n\n  onFilterChange(e) {\n    var filter = e.target.innerHTML;\n    var account = this.getAddress(this.props.account);\n    this.getPosts(filter, account);\n  }\n\n  getPostsPublished(address) {\n    credsign.Publish({publisher: address}, {fromBlock: 0, toBlock: 'latest'}).get((error, postEvents) => {\n      var ids = [];\n      var listItems = [];\n      var idToIndex = {};\n      for (var i = 0; i < postEvents.length; i++) {\n        var id = '0x' + postEvents[i].args.contentID.toString(16)\n        idToIndex[id] = ids.length;\n        ids.push(id);\n        listItems.push({\n          id: id,\n          timestamp: parseInt(postEvents[i].args.timestamp.toString(10))\n        });\n      }\n      batchread.getCredRanksByContents(ids, (error, credRanks) => {\n        for (var i = 0; i < ids.length; i++) {\n          listItems[i].cred = credRanks[0][i].toString();\n          listItems[i].rank = credRanks[1][i].toString();\n        }\n        credsign.Store({contentID: ids}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n          posts.forEach((post) => {\n            var index = idToIndex['0x' + post.args.contentID.toString(16)];\n            var id = post.args.channelID;\n            var channelName = '';\n            while (id != 0) {\n              channelName = String.fromCharCode(id.mod(256)) + channelName;\n              id = id.div(256).floor();\n            }\n            listItems[index].title = post.args.title;\n            listItems[index].channelName = channelName;\n          });\n          this.setState({\n            toggle: !this.state.toggle,\n            listItems: listItems.reverse()\n          });\n        });\n      });\n    });\n  }\n\n  getPostsSigned(address) {\n    credsign.Sign({signatory: address}, {fromBlock: 0, toBlock: 'latest'}).get((error, signatures) => {\n      var ids = [];\n      var listItems = [];\n      var idToIndex = {};\n      for (var i = 0; i < signatures.length; i++) {\n        if (idToIndex[id] === undefined || !signatures[i].args.accountCred.equals(0)) {\n          var id = '0x' + signatures[i].args.contentID.toString(16);\n          ids.push(id);\n          idToIndex[id] = listItems.length;\n          listItems.push({\n            id: id,\n            timestamp: parseInt(signatures[i].args.timestamp.toString(10))\n          });\n        }\n      }\n      batchread.getCredRanksByContents(ids, (error, credRanks) => {\n        for (var i = 0; i < ids.length; i++) {\n          listItems[i].cred = credRanks[0][i].toString();\n          listItems[i].rank = credRanks[1][i].toString();\n        }\n        credsign.Store({contentID: ids}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n          posts.forEach((post) => {\n            var index = idToIndex['0x' + post.args.contentID.toString(16)];\n            var id = post.args.channelID;\n            var channelName = '';\n            while (id != 0) {\n              channelName = String.fromCharCode(id.mod(256)) + channelName;\n              id = id.div(256).floor();\n            }\n            listItems[index].title = post.args.title;\n            listItems[index].channelName = channelName;\n          });\n          this.setState({\n            toggle: !this.state.toggle,\n            listItems: listItems.reverse()\n          });\n        });\n      });\n    });\n  }\n\n  getPostsFunded(address) {\n    batchread.getContentsFundedByAccount(address, (error, tuple) => {\n      var ids = tuple[0].map((id) => '0x' + id.toString(16));\n      var credSigned = tuple[1].map((cred) => parseInt(cred.toString()));\n      console.log(ids);\n      var listItems = [];\n      var idToIndex = {};\n      for (var i = 0; i < ids.length; i++) {\n        idToIndex[ids[i]] = i;\n        listItems.push({\n          id: ids[i],\n          credSigned: credSigned[i].toString()\n        });\n      }\n      batchread.getCredRanksByContents(ids, (error, credRanks) => {\n        for (var i = 0; i < ids.length; i++) {\n          listItems[i].cred = credRanks[0][i].toString();\n          listItems[i].rank = credRanks[1][i].toString();\n        }\n        credsign.Store({contentID: ids}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n          posts.forEach((post) => {\n            var index = idToIndex['0x' + post.args.contentID.toString(16)];\n            var id = post.args.channelID;\n            var channelName = '';\n            while (id != 0) {\n              channelName = String.fromCharCode(id.mod(256)) + channelName;\n              id = id.div(256).floor();\n            }\n            listItems[index].title = post.args.title;\n            listItems[index].timestamp = post.args.timestamp;\n            listItems[index].channelName = channelName;\n          });\n          this.setState({\n            toggle: !this.state.toggle,\n            listItems: listItems\n          });\n        });\n      });\n    });\n  }\n\n  render() {\n    var listItems = this.state.listItems.map((listItem) => {\n      var action = '';\n      if (this.state.filter == 'Posted') {\n        action = `Posted ${new Date(listItem.timestamp* 1000).toLocaleString()}`;\n      }\n      else if (this.state.filter == 'Funded') {\n        action = `Signed with ${listItem.credSigned}¢`;\n      }\n      else {\n        action = `Signed ${new Date(listItem.timestamp* 1000).toLocaleString()}`;\n      }\n      return (\n        <li key={'li-'+listItem.id} value={listItem.rank}>\n          <a href={`#/channel/${listItem.channelName}/post/${listItem.id}`}>\n            <div>{listItem.title}</div>\n            <span>{`Rank ${listItem.rank} in #${listItem.channelName} with ${listItem.cred}¢ - ${action}`}</span>\n          </a>\n        </li>\n      );\n    });\n    return (\n      <div className='view-align'>\n        <div style={{position: 'relative'}}>\n          <span onClick={() => this.setState({menu: !this.state.menu})} style={{cursor: 'pointer'}}>{`${this.state.filter} ▾`}</span>\n          <ul onMouseLeave={() => this.setState({menu: false})} onClick={this.onFilterChange} style={{position: 'absolute', top: '1.5em', left: '0', display: this.state.menu ? 'block' : 'none'}}>\n            <li>Posted</li>\n            <li>Funded</li>\n            <li>Signed</li>\n          </ul>\n          <span>{` by account (${listItems.length})`}</span>\n        </div>\n        <ol>{listItems}</ol>\n      </div>\n    );\n  }\n}\n\n// Manage navigation\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      levelOne: '',\n      levelTwo: '',\n      levelThree: '',\n      levelFour: '',\n      account: '',\n      editChannel: true,\n      contentID: null\n    };\n\n\n    this.route = this.route.bind(this);\n    this.setChannel = this.setChannel.bind(this);\n\n    window.addEventListener('hashchange', () => this.route(window.location.hash));\n  }\n\n  componentDidMount() {\n    this.route(window.location.hash);\n    web3.eth.getAccounts((error, accounts) => {\n      if (accounts.length > 0) {\n        this.setState({\n          account: accounts[0]\n        });\n      }\n      else {\n        this.setState({\n          warn: true\n        });\n      }\n    });\n  }\n\n  setChannel(e) {\n    window.location.hash = \"#/\"+this.state.levelOne+\"/\" + e.target.value;\n    this.route(window.location.hash);\n  }\n\n  componentDidUpdate() {\n    document.getElementById('channel').innerHTML = this.state.levelTwo;\n  }\n\n  route(href) {\n    var path = href.split('/');\n    path[1] = path.length > 1 ? path[1] : 'channel';\n    path[2] = path.length > 2 ? path[2] : '';\n    path[3] = path.length > 3 ? path[3] : '';\n    path[4] = path.length > 4 ? path[4] : '';\n    this.setState({\n      levelOne: path[1],\n      levelTwo: path[2],\n      levelThree: path[3],\n      levelFour: path[4],\n      editChannel: (path[1] == 'channel' && path[3] == '') || (path[1] == 'publish') || (path[1] == 'account')\n    });\n  }\n\n  render() {\n\n    var view;\n    if (this.state.levelOne == 'channel') {\n      if (this.state.levelThree == 'post') {\n        view = <Post id={this.state.levelFour} channel={this.state.levelTwo} account={this.state.account} />;\n      }\n      else if (this.state.levelTwo == '') {\n        view = <RankedChannels />;\n      }\n      else {\n        view = <ChannelPosts channel={this.state.levelTwo} />;\n      }\n    }\n    else if (this.state.levelOne == 'publish'){\n      view = <Create channel={this.state.levelTwo} account={this.state.account} />\n    }\n    else if (this.state.levelOne == 'account') {\n      view = <Account account={this.state.levelTwo} />;\n    }\n\n    return (\n      <div style={{padding: '3em 0'}}>\n        <div style={{\n          position: 'fixed',\n          width: '100%',\n          backgroundColor: '#fafafa',\n          borderBottom: '1px solid #DDD',\n          color: 'black',\n          fontSize: '1.5em',\n          top: 0,\n          fontWeight: 'bold',\n          padding: '.5em 0',\n          textAlign: 'center',\n          zIndex: 10\n        }}>\n          <div style={{\n            width: '600px',\n            margin: '0 auto'\n          }}>\n            <div className=\"flex\" style={{padding: '0 .66em'}}>\n              <a href='#/channel' className=\"flex-grow\" style={{\n                color: 'black',\n                textAlign: 'left',\n                display: 'inline-block'\n              }}>Channels</a>\n              <div className=\"flex-shrink\" style={{\n                display: 'inline-block'\n              }}>¢</div>\n              <a href={`#/account/${this.state.account}`} className=\"flex-grow\" style={{\n                color: 'black',\n                textAlign: 'right',\n                display: 'inline-block'\n              }}>Accounts</a>\n            </div>\n          </div>\n        </div>\n        <div style={{width: '600px', margin: '0 auto', padding: '1.5em 0'}}>\n          <div className=\"flex\">\n            <div className=\"flex-grow\">\n              <div className=\"flex\" style={{\n                padding: '.5em 1em',\n                backgroundColor: 'white',\n                borderTop: '2px solid white',\n                borderBottom: '2px solid white',\n                borderRight: '0',\n                borderLeft: '0'\n              }}>\n                <span className=\"flex-shrink\" style={{\n                  color: 'gray',\n                  fontWeight: 'normal',\n                }}>{this.state.levelOne == 'account' ? '@' : '#'}</span>\n                <input type=\"text\" placeholder={this.state.levelOne == \"account\" ? \"0x321...\" : \"channel\"} id=\"channel\" className=\"flex-grow\" style={{\n                  backgroundColor: 'transparent',\n                  fontSize: '1em',\n                  padding: 0,\n                  margin: 0,\n                  border: 0,\n                  outline: 0,\n                  placeholderTextColor: 'gray',\n                  color: 'black'\n                }} value={this.state.levelTwo} onChange={this.setChannel}></input>\n              </div>\n            </div>\n            <div className=\"flex-shrink\">\n              <a style={{\n                margin: '0 1em',\n                color: 'black',\n                display: (this.state.levelOne == 'publish' || this.state.account == '') ? 'none' : 'block',\n                borderBottom: '2px solid black',\n                padding: '.5em 0'\n              }} href={`#/publish/${this.state.levelOne == 'channel' ? this.state.levelTwo : ''}`}>Publish</a>\n            </div>\n          </div>\n        </div>\n        <div style={{display: this.state.warn ? 'block': 'none'}}>\n          <div className='backdrop' style={{\n            width: '100%',\n            height: '100%',\n            opacity: 0.5,\n            backgroundColor: 'black',\n            position: 'fixed',\n            zIndex: 1,\n            top: '0',\n            left: '0'\n          }}>{' '}</div>\n          <div style={{\n            left: '50%',\n            top: '30%',\n            marginLeft: '-300px',\n            zIndex: 2,\n            position: 'fixed',\n            backgroundColor: '#FCFCFC',\n            border: '1px solid #DDD',\n            width: '600px'\n          }}>\n            <div style={{padding: '1em'}}>\n              <h1>Please link an account</h1>\n              <div style={{padding: '1em 0'}}>{\n                'CredSign was unable to detect your Ethereum account. '+\n                'If you do not have an account, please install Mist or '+\n                'MetaMask and create one. You will need an account to '+\n                'publish and sign content.'\n              }</div>\n              <span onClick={() => this.setState({warn: false})} style={{\n                borderBottom: '2px solid black',\n                padding: '.5em 0',\n                display: 'inline-block',\n                cursor: 'pointer'\n              }}>Close</span>\n            </div>\n          </div>\n        </div>\n        <div>{view}</div>\n        <div style={{\n          width: '100%',\n          position: 'fixed',\n          backgroundColor: '#fafafa',\n          borderTop: '1px solid #DDD',\n          color: 'gray',\n          bottom: 0,\n          fontSize: '69%',\n          fontWeight: 'bold',\n          padding: '1em 0',\n          textTransform: 'uppercase',\n          textAlign: 'center',\n          zIndex: 10\n        }}>\n          <span>{'Message us on '}</span>\n          <a href={'https://facebook.com/CredSign'} style={{\n            padding: '.5em 0',\n            borderBottom: '2px solid gray',\n            display: 'inline-block',\n            color: 'gray'\n          }}>Facebook</a>\n          <span>{' · View source on '}</span>\n          <a href={'https://github.com/CredSign/credsign.github.io'} style={{\n            padding: '.5em 0',\n            borderBottom: '2px solid gray',\n            display: 'inline-block',\n            color: 'gray'\n          }}>Github</a>\n          <span>{' · Usage governed by '}</span>\n          <a\n            href=\"https://github.com/CredSign/credsign.github.io/blob/master/LICENSE\"\n            style={{\n              color: 'gray',\n              padding: '.5em 0',\n              display: 'inline-block',\n              borderBottom: '2px solid gray'\n            }}>terms</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nwindow.App = App;\n","// Adapted from https://gist.github.com/Youwotma/1762527\n// No license provided in original, so assume license of this repo.\n\nwindow.toMarkdown = (node) => {\n\n    var markdownEscape = (text) => {\n        return text ? text.replace(/\\s+/g, \" \").replace(/[\\\\\\-*_>#]/g, \"\\\\$&\") : '';\n    }\n\n    var repeat = (str, times) => {\n        return (new Array(times+1)).join(str);\n    }\n\n    var childsToMarkdown = (tree, mode) => {\n        var res = \"\";\n        for (var i = 0, l = tree.childNodes.length; i < l; i++) {\n            res += nodeToMarkdown(tree.childNodes[i], mode);\n        }\n        return res;\n    }\n\n    var nodeToMarkdown = (tree, mode) => {\n        var nl = \"\\n\\n\";\n        if (tree.nodeType == 3) { // Text node\n            return markdownEscape(tree.nodeValue);\n        }\n        else if (tree.nodeType == 1) {\n            if (mode == \"block\") {\n                switch (tree.tagName.toLowerCase()) {\n                    case \"br\":\n                        return nl;\n                    case \"hr\":\n                        return nl + \"---\" + nl;\n                    // Block container elements\n                    case \"p\":\n                    case \"div\":\n                    case \"section\":\n                    case \"address\":\n                    case \"center\":\n                        return nl + childsToMarkdown(tree, \"block\") + nl;\n                    case \"ul\":\n                        return nl + childsToMarkdown(tree, \"u\") + nl;\n                    case \"ol\":\n                        return nl + childsToMarkdown(tree, \"o\") + nl;\n                    case \"pre\":\n                        return nl + \"    \" + childsToMarkdown(tree, \"inline\") + nl;\n                    case \"code\":\n                        if (tree.childNodes.length == 1) {\n                            break; // use the inline format\n                        }\n                        return nl + \"    \" + childsToMarkdown(tree, \"inline\") + nl;\n                    case \"h1\":\n                    case \"h2\":\n                    case \"h3\":\n                    case \"h4\":\n                    case \"h5\":\n                    case \"h6\":\n                        return nl + repeat(\"#\", +tree.tagName[1]) + \"  \" + childsToMarkdown(tree, \"inline\") + nl;\n                    case \"blockquote\":\n                        return nl + \"> \" + childsToMarkdown(tree, \"inline\") + nl;\n                }\n            }\n            if (/^[ou]+$/.test(mode)) {\n                if (tree.tagName == \"LI\") {\n                    return \"\\n\" + repeat(\"  \", mode.length - 1) + (mode[mode.length-1]==\"o\"?\"1. \":\"- \") + childsToMarkdown(tree, mode+\"l\");\n                }\n                else{\n                    console.log(\"[toMarkdown] - invalid element at this point \" + mode.tagName);\n                    return childsToMarkdown(tree, \"inline\");\n                }\n            }\n            else if (/^[ou]+l$/.test(mode)) {\n                if (tree.tagName == \"UL\") {\n                    return childsToMarkdown(tree,mode.substr(0,mode.length-1)+\"u\");\n                }\n                else if (tree.tagName == \"OL\") {\n                    return childsToMarkdown(tree,mode.substr(0,mode.length-1)+\"o\");\n                }\n            }\n\n            // Inline tags\n            switch (tree.tagName.toLowerCase()) {\n                case \"strong\":\n                case \"b\":\n                    return \"**\" + childsToMarkdown(tree,\"inline\") + \"**\";\n                case \"em\":\n                case \"i\":\n                    return \"_\" + childsToMarkdown(tree,\"inline\") + \"_\";\n                case \"code\": // Inline version of code\n                    return \"`\" + childsToMarkdown(tree,\"inline\") + \"`\";\n                case \"a\":\n                    return \"[\" + childsToMarkdown(tree,\"inline\") + \"](\" + tree.getAttribute(\"href\") + \")\";\n                case \"img\":\n                    return nl + \"![: \" + markdownEscape(tree.getAttribute(\"alt\")) + \"](\" + tree.getAttribute(\"src\") + \")\" + nl;\n                case \"script\":\n                case \"style\":\n                case \"meta\":\n                    return \"\";\n                default:\n                    console.log(\"[toMarkdown] - undefined element \" + tree.tagName);\n                    return childsToMarkdown(tree,mode);\n            }\n        }\n    }\n\n    return nodeToMarkdown(node, \"block\").replace(/[\\n]{2,}/g,\"\\n\\n\").replace(/^[\\n]+/,\"\").replace(/[\\n]+$/,\"\");\n}\n"],"sourceRoot":"/source/"}